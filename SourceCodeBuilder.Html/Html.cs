
using System.Text;
using System.IO;

namespace SourceCodeBuilder.Html.Expressions
{

    /// <summary>
    /// Html builder
    /// </summary>
    public partial class HtmlBuilder : Tag
    {
        public static aTag<HtmlBuilder> a { get{ return new (new ()); } }
        public static abbrTag<HtmlBuilder> abbr { get{ return new (new ()); } }
        public static addressTag<HtmlBuilder> address { get{ return new (new ()); } }
        public static areaTag<HtmlBuilder> area { get{ return new (new ()); } }
        public static articleTag<HtmlBuilder> article { get{ return new (new ()); } }
        public static asideTag<HtmlBuilder> aside { get{ return new (new ()); } }
        public static audioTag<HtmlBuilder> audio { get{ return new (new ()); } }
        public static bTag<HtmlBuilder> b { get{ return new (new ()); } }
        public static base_Tag<HtmlBuilder> base_ { get{ return new (new ()); } }
        public static bdiTag<HtmlBuilder> bdi { get{ return new (new ()); } }
        public static bdoTag<HtmlBuilder> bdo { get{ return new (new ()); } }
        public static blockquoteTag<HtmlBuilder> blockquote { get{ return new (new ()); } }
        public static bodyTag<HtmlBuilder> body { get{ return new (new ()); } }
        public static brTag<HtmlBuilder> br { get{ return new (new ()); } }
        public static buttonTag<HtmlBuilder> button { get{ return new (new ()); } }
        public static canvasTag<HtmlBuilder> canvas { get{ return new (new ()); } }
        public static captionTag<HtmlBuilder> caption { get{ return new (new ()); } }
        public static citeTag<HtmlBuilder> cite { get{ return new (new ()); } }
        public static codeTag<HtmlBuilder> code { get{ return new (new ()); } }
        public static colTag<HtmlBuilder> col { get{ return new (new ()); } }
        public static colgroupTag<HtmlBuilder> colgroup { get{ return new (new ()); } }
        public static dataTag<HtmlBuilder> data { get{ return new (new ()); } }
        public static datalistTag<HtmlBuilder> datalist { get{ return new (new ()); } }
        public static ddTag<HtmlBuilder> dd { get{ return new (new ()); } }
        public static delTag<HtmlBuilder> del { get{ return new (new ()); } }
        public static detailsTag<HtmlBuilder> details { get{ return new (new ()); } }
        public static dfnTag<HtmlBuilder> dfn { get{ return new (new ()); } }
        public static dialogTag<HtmlBuilder> dialog { get{ return new (new ()); } }
        public static divTag<HtmlBuilder> div { get{ return new (new ()); } }
        public static htmlTag<HtmlBuilder> html { get{ return new (new ()); } }
        public static tableTag<HtmlBuilder> table { get{ return new (new ()); } }
        public static tbodyTag<HtmlBuilder> tbody { get{ return new (new ()); } }
        public static tdTag<HtmlBuilder> td { get{ return new (new ()); } }
        public static templateTag<HtmlBuilder> template { get{ return new (new ()); } }
        public static textareaTag<HtmlBuilder> textarea { get{ return new (new ()); } }
        public static tfootTag<HtmlBuilder> tfoot { get{ return new (new ()); } }
        public static thTag<HtmlBuilder> th { get{ return new (new ()); } }
        public static theadTag<HtmlBuilder> thead { get{ return new (new ()); } }
        public static timeTag<HtmlBuilder> time { get{ return new (new ()); } }
        public static titleTag<HtmlBuilder> title { get{ return new (new ()); } }
        public static trTag<HtmlBuilder> tr { get{ return new (new ()); } }
        public HtmlBuilder() : base("") { }
        public static aTag<HtmlBuilder> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new aTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_download != null) tag.AddAttribute("download", _download);
            if (_href != null) tag.AddAttribute("href", _href);
            if (_hreflang != null) tag.AddAttribute("hreflang", _hreflang);
            if (_media != null) tag.AddAttribute("media", _media);
            if (_ping != null) tag.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) tag.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) tag.AddAttribute("rel", _rel);
            if (_target != null) tag.AddAttribute("target", _target);
            if (_type != null) tag.AddAttribute("type", _type);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static abbrTag<HtmlBuilder> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new abbrTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static addressTag<HtmlBuilder> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new addressTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static areaTag<HtmlBuilder> Area(string? innerText = null, string? _alt = null, string? _coords = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _referrerpolicy = null, string? _rel = null, string? _shape = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new areaTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_alt != null) tag.AddAttribute("alt", _alt);
            if (_coords != null) tag.AddAttribute("coords", _coords);
            if (_download != null) tag.AddAttribute("download", _download);
            if (_href != null) tag.AddAttribute("href", _href);
            if (_hreflang != null) tag.AddAttribute("hreflang", _hreflang);
            if (_media != null) tag.AddAttribute("media", _media);
            if (_referrerpolicy != null) tag.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) tag.AddAttribute("rel", _rel);
            if (_shape != null) tag.AddAttribute("shape", _shape);
            if (_target != null) tag.AddAttribute("target", _target);
            if (_type != null) tag.AddAttribute("type", _type);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static articleTag<HtmlBuilder> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new articleTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static asideTag<HtmlBuilder> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new asideTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static audioTag<HtmlBuilder> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new audioTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_autoplay != null) tag.AddAttribute("autoplay", _autoplay);
            if (_controls != null) tag.AddAttribute("controls", _controls);
            if (_loop != null) tag.AddAttribute("loop", _loop);
            if (_muted != null) tag.AddAttribute("muted", _muted);
            if (_preload != null) tag.AddAttribute("preload", _preload);
            if (_src != null) tag.AddAttribute("src", _src);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static bTag<HtmlBuilder> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new bTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static base_Tag<HtmlBuilder> Base_(string? innerText = null, string? _href = null, string? _target = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new base_Tag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_href != null) tag.AddAttribute("href", _href);
            if (_target != null) tag.AddAttribute("target", _target);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static bdiTag<HtmlBuilder> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new bdiTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static bdoTag<HtmlBuilder> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new bdoTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static blockquoteTag<HtmlBuilder> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new blockquoteTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_cite != null) tag.AddAttribute("cite", _cite);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static bodyTag<HtmlBuilder> Body(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new bodyTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static brTag<HtmlBuilder> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new brTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static buttonTag<HtmlBuilder> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new buttonTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_autofocus != null) tag.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) tag.AddAttribute("disabled", _disabled);
            if (_form != null) tag.AddAttribute("form", _form);
            if (_formaction != null) tag.AddAttribute("formaction", _formaction);
            if (_formenctype != null) tag.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) tag.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) tag.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) tag.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) tag.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) tag.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) tag.AddAttribute("name", _name);
            if (_type != null) tag.AddAttribute("type", _type);
            if (_value != null) tag.AddAttribute("value", _value);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static canvasTag<HtmlBuilder> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new canvasTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_height != null) tag.AddAttribute("height", _height);
            if (_width != null) tag.AddAttribute("width", _width);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static captionTag<HtmlBuilder> Caption(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new captionTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static citeTag<HtmlBuilder> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new citeTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static codeTag<HtmlBuilder> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new codeTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static colTag<HtmlBuilder> Col(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new colTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static colgroupTag<HtmlBuilder> Colgroup(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new colgroupTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static dataTag<HtmlBuilder> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new dataTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_value != null) tag.AddAttribute("value", _value);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static datalistTag<HtmlBuilder> Datalist(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new datalistTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static ddTag<HtmlBuilder> Dd(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new ddTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static delTag<HtmlBuilder> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new delTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_cite != null) tag.AddAttribute("cite", _cite);
            if (_datetime != null) tag.AddAttribute("datetime", _datetime);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static detailsTag<HtmlBuilder> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new detailsTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_open != null) tag.AddAttribute("open", _open);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static dfnTag<HtmlBuilder> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new dfnTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static dialogTag<HtmlBuilder> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new dialogTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_open != null) tag.AddAttribute("open", _open);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static divTag<HtmlBuilder> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new divTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static htmlTag<HtmlBuilder> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new htmlTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static tableTag<HtmlBuilder> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new tableTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static tbodyTag<HtmlBuilder> Tbody(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new tbodyTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static tdTag<HtmlBuilder> Td(string? innerText = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new tdTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_colspan != null) tag.AddAttribute("colspan", _colspan);
            if (_headers != null) tag.AddAttribute("headers", _headers);
            if (_rowspan != null) tag.AddAttribute("rowspan", _rowspan);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static templateTag<HtmlBuilder> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new templateTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static textareaTag<HtmlBuilder> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new textareaTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static tfootTag<HtmlBuilder> Tfoot(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new tfootTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static thTag<HtmlBuilder> Th(string? innerText = null, string? _abbr = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _scope = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new thTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_abbr != null) tag.AddAttribute("abbr", _abbr);
            if (_colspan != null) tag.AddAttribute("colspan", _colspan);
            if (_headers != null) tag.AddAttribute("headers", _headers);
            if (_rowspan != null) tag.AddAttribute("rowspan", _rowspan);
            if (_scope != null) tag.AddAttribute("scope", _scope);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static theadTag<HtmlBuilder> Thead(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new theadTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static timeTag<HtmlBuilder> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new timeTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static titleTag<HtmlBuilder> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new titleTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public static trTag<HtmlBuilder> Tr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            var tag = new trTag<HtmlBuilder>(new HtmlBuilder());
            if (innerText != null) tag.AddInnerText(innerText);
            if (_accesskey != null) tag.AddAttribute("accesskey", _accesskey);
            if (_class != null) tag.AddAttribute("class", _class);
            if (_contenteditable != null) tag.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) tag.AddAttribute("dir", _dir);
            if (_draggable != null) tag.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) tag.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) tag.AddAttribute("hidden", _hidden);
            if (_id != null) tag.AddAttribute("id", _id);
            if (_inert != null) tag.AddAttribute("inert", _inert);
            if (_inputmode != null) tag.AddAttribute("inputmode", _inputmode);
            if (_lang != null) tag.AddAttribute("lang", _lang);
            if (_popover != null) tag.AddAttribute("popover", _popover);
            if (_spellcheck != null) tag.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) tag.AddAttribute("style", _style);
            if (_tabindex != null) tag.AddAttribute("tabindex", _tabindex);
            if (_title != null) tag.AddAttribute("title", _title);
            if (_translate != null) tag.AddAttribute("translate", _translate);
            if (_onafterprint != null) tag.AddAttribute("onafterprint", _onafterprint);
            return tag;
        }
        public override string ToString()
        {
            using MemoryStream memoryStream = new MemoryStream();
            using StreamWriter streamWriter = new StreamWriter(memoryStream);
            Generate(streamWriter);
            streamWriter.Flush();
            return Encoding.ASCII.GetString(memoryStream.ToArray());
        }
    }

    /// <summary>
    /// Tag class
    /// </summary>
    public partial class Tag
    {

        /// <summary>
        /// Tree tabs
        /// </summary>
        public static string s_Tabs = "  ";

        /// <summary>
        /// Tag name
        /// </summary>
        string Name = string.Empty;

        /// <summary>
        /// Declared tag inner text
        /// </summary>
        string DeclaredInnerText = string.Empty;

        /// <summary>
        /// List of inner elements
        /// </summary>
        private List<Tag> InnerElements = [];

        /// <summary>
        /// Parent tag
        /// </summary>
        private Tag ParentTag;

        /// <summary>
        /// Tag attributes
        /// </summary>
        private Dictionary<string, string> Attributes = [];
        public Tag(string name)
        {
            Name = name;
        }
        public Tag(string name, Tag parent)
        {
            Name = name;
            ParentTag = parent;
        }
        internal void AddAttribute(string name, string value)
        {
            Attributes.Add(name, value);
        }
        internal void AddInnerElement(Tag tag)
        {
            if(tag is HtmlBuilder)
            {
                InnerElements.AddRange(tag.InnerElements);
            }
            else
            {
                InnerElements.Add(tag);
            }
        }
        internal void AddInnerText(string innerText)
        {
            DeclaredInnerText = innerText;
        }

        /// <summary>
        /// Generate result text with TextWriter
        /// </summary>
        public void Generate(TextWriter writer, string? _defaultTabs  = null, bool forComments  = false)
        {
            string attributes = string.Join(" ", Attributes.Select(o => $"{o.Key}=\"{o.Value}\""));
            if (attributes != string.Empty)
            {
                attributes = $" {attributes}";
            }
            if (!string.IsNullOrEmpty(DeclaredInnerText))
            {
                if (forComments)
                {
                    writer.Write($"{_defaultTabs}<{Name}{attributes}>{DeclaredInnerText.Replace(Environment.NewLine, Environment.NewLine + _defaultTabs)}</{Name}>".Replace("<", ">"));
                }
                else
                {
                    writer.Write($"{_defaultTabs}<{Name}{attributes}>{DeclaredInnerText.Replace(Environment.NewLine, Environment.NewLine + _defaultTabs)}</{Name}>");
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(Name))
                {
                    writer.Write($"{_defaultTabs}<{Name}{attributes}>{Environment.NewLine}");
                }
                foreach (var element in InnerElements)
                {
                    element.Generate(writer, _defaultTabs == null ? "" : _defaultTabs + s_Tabs, forComments);
                    writer.Write($"{Environment.NewLine}");
                }
                if (!string.IsNullOrEmpty(Name))
                {
                    writer.Write($"{_defaultTabs}</{Name}>");
                }
            }
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class aTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T a_ { get{ return _parent; } }
        public aTag<aTag<T>> a { get{ return new (this); } }
        public abbrTag<aTag<T>> abbr { get{ return new (this); } }
        public addressTag<aTag<T>> address { get{ return new (this); } }
        public articleTag<aTag<T>> article { get{ return new (this); } }
        public asideTag<aTag<T>> aside { get{ return new (this); } }
        public audioTag<aTag<T>> audio { get{ return new (this); } }
        public bTag<aTag<T>> b { get{ return new (this); } }
        public bdiTag<aTag<T>> bdi { get{ return new (this); } }
        public bdoTag<aTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<aTag<T>> blockquote { get{ return new (this); } }
        public brTag<aTag<T>> br { get{ return new (this); } }
        public buttonTag<aTag<T>> button { get{ return new (this); } }
        public canvasTag<aTag<T>> canvas { get{ return new (this); } }
        public citeTag<aTag<T>> cite { get{ return new (this); } }
        public codeTag<aTag<T>> code { get{ return new (this); } }
        public dataTag<aTag<T>> data { get{ return new (this); } }
        public delTag<aTag<T>> del { get{ return new (this); } }
        public detailsTag<aTag<T>> details { get{ return new (this); } }
        public dfnTag<aTag<T>> dfn { get{ return new (this); } }
        public dialogTag<aTag<T>> dialog { get{ return new (this); } }
        public divTag<aTag<T>> div { get{ return new (this); } }
        public htmlTag<aTag<T>> html { get{ return new (this); } }
        public tableTag<aTag<T>> table { get{ return new (this); } }
        public templateTag<aTag<T>> template { get{ return new (this); } }
        public textareaTag<aTag<T>> textarea { get{ return new (this); } }
        public timeTag<aTag<T>> time { get{ return new (this); } }
        public titleTag<aTag<T>> title { get{ return new (this); } }
        public aTag() : base("a") { }
        public aTag(T parent) : base("a", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public aTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public aTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public aTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<aTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<aTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<aTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<aTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<aTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<aTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<aTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<aTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<aTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<aTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<aTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<aTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<aTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<aTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<aTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<aTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<aTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<aTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<aTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<aTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<aTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<aTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<aTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<aTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<aTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<aTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<aTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<aTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class abbrTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T abbr_ { get{ return _parent; } }
        public aTag<abbrTag<T>> a { get{ return new (this); } }
        public abbrTag<abbrTag<T>> abbr { get{ return new (this); } }
        public addressTag<abbrTag<T>> address { get{ return new (this); } }
        public articleTag<abbrTag<T>> article { get{ return new (this); } }
        public asideTag<abbrTag<T>> aside { get{ return new (this); } }
        public audioTag<abbrTag<T>> audio { get{ return new (this); } }
        public bTag<abbrTag<T>> b { get{ return new (this); } }
        public bdiTag<abbrTag<T>> bdi { get{ return new (this); } }
        public bdoTag<abbrTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<abbrTag<T>> blockquote { get{ return new (this); } }
        public brTag<abbrTag<T>> br { get{ return new (this); } }
        public buttonTag<abbrTag<T>> button { get{ return new (this); } }
        public canvasTag<abbrTag<T>> canvas { get{ return new (this); } }
        public citeTag<abbrTag<T>> cite { get{ return new (this); } }
        public codeTag<abbrTag<T>> code { get{ return new (this); } }
        public dataTag<abbrTag<T>> data { get{ return new (this); } }
        public delTag<abbrTag<T>> del { get{ return new (this); } }
        public detailsTag<abbrTag<T>> details { get{ return new (this); } }
        public dfnTag<abbrTag<T>> dfn { get{ return new (this); } }
        public dialogTag<abbrTag<T>> dialog { get{ return new (this); } }
        public divTag<abbrTag<T>> div { get{ return new (this); } }
        public htmlTag<abbrTag<T>> html { get{ return new (this); } }
        public tableTag<abbrTag<T>> table { get{ return new (this); } }
        public templateTag<abbrTag<T>> template { get{ return new (this); } }
        public textareaTag<abbrTag<T>> textarea { get{ return new (this); } }
        public timeTag<abbrTag<T>> time { get{ return new (this); } }
        public titleTag<abbrTag<T>> title { get{ return new (this); } }
        public abbrTag() : base("abbr") { }
        public abbrTag(T parent) : base("abbr", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public abbrTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public abbrTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public abbrTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<abbrTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<abbrTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<abbrTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<abbrTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<abbrTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<abbrTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<abbrTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<abbrTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<abbrTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<abbrTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<abbrTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<abbrTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<abbrTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<abbrTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<abbrTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<abbrTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<abbrTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<abbrTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<abbrTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<abbrTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<abbrTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<abbrTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<abbrTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<abbrTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<abbrTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<abbrTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<abbrTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<abbrTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class addressTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T address_ { get{ return _parent; } }
        public aTag<addressTag<T>> a { get{ return new (this); } }
        public abbrTag<addressTag<T>> abbr { get{ return new (this); } }
        public addressTag<addressTag<T>> address { get{ return new (this); } }
        public articleTag<addressTag<T>> article { get{ return new (this); } }
        public asideTag<addressTag<T>> aside { get{ return new (this); } }
        public audioTag<addressTag<T>> audio { get{ return new (this); } }
        public bTag<addressTag<T>> b { get{ return new (this); } }
        public bdiTag<addressTag<T>> bdi { get{ return new (this); } }
        public bdoTag<addressTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<addressTag<T>> blockquote { get{ return new (this); } }
        public brTag<addressTag<T>> br { get{ return new (this); } }
        public buttonTag<addressTag<T>> button { get{ return new (this); } }
        public canvasTag<addressTag<T>> canvas { get{ return new (this); } }
        public citeTag<addressTag<T>> cite { get{ return new (this); } }
        public codeTag<addressTag<T>> code { get{ return new (this); } }
        public dataTag<addressTag<T>> data { get{ return new (this); } }
        public delTag<addressTag<T>> del { get{ return new (this); } }
        public detailsTag<addressTag<T>> details { get{ return new (this); } }
        public dfnTag<addressTag<T>> dfn { get{ return new (this); } }
        public dialogTag<addressTag<T>> dialog { get{ return new (this); } }
        public divTag<addressTag<T>> div { get{ return new (this); } }
        public htmlTag<addressTag<T>> html { get{ return new (this); } }
        public tableTag<addressTag<T>> table { get{ return new (this); } }
        public templateTag<addressTag<T>> template { get{ return new (this); } }
        public textareaTag<addressTag<T>> textarea { get{ return new (this); } }
        public timeTag<addressTag<T>> time { get{ return new (this); } }
        public titleTag<addressTag<T>> title { get{ return new (this); } }
        public addressTag() : base("address") { }
        public addressTag(T parent) : base("address", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public addressTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public addressTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public addressTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<addressTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<addressTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<addressTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<addressTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<addressTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<addressTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<addressTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<addressTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<addressTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<addressTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<addressTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<addressTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<addressTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<addressTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<addressTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<addressTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<addressTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<addressTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<addressTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<addressTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<addressTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<addressTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<addressTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<addressTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<addressTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<addressTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<addressTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<addressTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class areaTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T area_ { get{ return _parent; } }
        public aTag<areaTag<T>> a { get{ return new (this); } }
        public abbrTag<areaTag<T>> abbr { get{ return new (this); } }
        public addressTag<areaTag<T>> address { get{ return new (this); } }
        public articleTag<areaTag<T>> article { get{ return new (this); } }
        public asideTag<areaTag<T>> aside { get{ return new (this); } }
        public audioTag<areaTag<T>> audio { get{ return new (this); } }
        public bTag<areaTag<T>> b { get{ return new (this); } }
        public bdiTag<areaTag<T>> bdi { get{ return new (this); } }
        public bdoTag<areaTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<areaTag<T>> blockquote { get{ return new (this); } }
        public brTag<areaTag<T>> br { get{ return new (this); } }
        public buttonTag<areaTag<T>> button { get{ return new (this); } }
        public canvasTag<areaTag<T>> canvas { get{ return new (this); } }
        public citeTag<areaTag<T>> cite { get{ return new (this); } }
        public codeTag<areaTag<T>> code { get{ return new (this); } }
        public dataTag<areaTag<T>> data { get{ return new (this); } }
        public delTag<areaTag<T>> del { get{ return new (this); } }
        public detailsTag<areaTag<T>> details { get{ return new (this); } }
        public dfnTag<areaTag<T>> dfn { get{ return new (this); } }
        public dialogTag<areaTag<T>> dialog { get{ return new (this); } }
        public divTag<areaTag<T>> div { get{ return new (this); } }
        public htmlTag<areaTag<T>> html { get{ return new (this); } }
        public tableTag<areaTag<T>> table { get{ return new (this); } }
        public templateTag<areaTag<T>> template { get{ return new (this); } }
        public textareaTag<areaTag<T>> textarea { get{ return new (this); } }
        public timeTag<areaTag<T>> time { get{ return new (this); } }
        public titleTag<areaTag<T>> title { get{ return new (this); } }
        public areaTag() : base("area") { }
        public areaTag(T parent) : base("area", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public areaTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public areaTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public areaTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<areaTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<areaTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<areaTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<areaTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<areaTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<areaTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<areaTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<areaTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<areaTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<areaTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<areaTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<areaTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<areaTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<areaTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<areaTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<areaTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<areaTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<areaTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<areaTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<areaTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<areaTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<areaTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<areaTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<areaTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<areaTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<areaTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<areaTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<areaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class articleTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T article_ { get{ return _parent; } }
        public aTag<articleTag<T>> a { get{ return new (this); } }
        public abbrTag<articleTag<T>> abbr { get{ return new (this); } }
        public addressTag<articleTag<T>> address { get{ return new (this); } }
        public articleTag<articleTag<T>> article { get{ return new (this); } }
        public asideTag<articleTag<T>> aside { get{ return new (this); } }
        public audioTag<articleTag<T>> audio { get{ return new (this); } }
        public bTag<articleTag<T>> b { get{ return new (this); } }
        public bdiTag<articleTag<T>> bdi { get{ return new (this); } }
        public bdoTag<articleTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<articleTag<T>> blockquote { get{ return new (this); } }
        public brTag<articleTag<T>> br { get{ return new (this); } }
        public buttonTag<articleTag<T>> button { get{ return new (this); } }
        public canvasTag<articleTag<T>> canvas { get{ return new (this); } }
        public citeTag<articleTag<T>> cite { get{ return new (this); } }
        public codeTag<articleTag<T>> code { get{ return new (this); } }
        public dataTag<articleTag<T>> data { get{ return new (this); } }
        public delTag<articleTag<T>> del { get{ return new (this); } }
        public detailsTag<articleTag<T>> details { get{ return new (this); } }
        public dfnTag<articleTag<T>> dfn { get{ return new (this); } }
        public dialogTag<articleTag<T>> dialog { get{ return new (this); } }
        public divTag<articleTag<T>> div { get{ return new (this); } }
        public htmlTag<articleTag<T>> html { get{ return new (this); } }
        public tableTag<articleTag<T>> table { get{ return new (this); } }
        public templateTag<articleTag<T>> template { get{ return new (this); } }
        public textareaTag<articleTag<T>> textarea { get{ return new (this); } }
        public timeTag<articleTag<T>> time { get{ return new (this); } }
        public titleTag<articleTag<T>> title { get{ return new (this); } }
        public articleTag() : base("article") { }
        public articleTag(T parent) : base("article", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public articleTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public articleTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public articleTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<articleTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<articleTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<articleTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<articleTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<articleTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<articleTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<articleTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<articleTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<articleTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<articleTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<articleTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<articleTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<articleTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<articleTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<articleTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<articleTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<articleTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<articleTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<articleTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<articleTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<articleTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<articleTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<articleTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<articleTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<articleTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<articleTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<articleTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<articleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class asideTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T aside_ { get{ return _parent; } }
        public aTag<asideTag<T>> a { get{ return new (this); } }
        public abbrTag<asideTag<T>> abbr { get{ return new (this); } }
        public addressTag<asideTag<T>> address { get{ return new (this); } }
        public articleTag<asideTag<T>> article { get{ return new (this); } }
        public asideTag<asideTag<T>> aside { get{ return new (this); } }
        public audioTag<asideTag<T>> audio { get{ return new (this); } }
        public bTag<asideTag<T>> b { get{ return new (this); } }
        public bdiTag<asideTag<T>> bdi { get{ return new (this); } }
        public bdoTag<asideTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<asideTag<T>> blockquote { get{ return new (this); } }
        public brTag<asideTag<T>> br { get{ return new (this); } }
        public buttonTag<asideTag<T>> button { get{ return new (this); } }
        public canvasTag<asideTag<T>> canvas { get{ return new (this); } }
        public citeTag<asideTag<T>> cite { get{ return new (this); } }
        public codeTag<asideTag<T>> code { get{ return new (this); } }
        public dataTag<asideTag<T>> data { get{ return new (this); } }
        public delTag<asideTag<T>> del { get{ return new (this); } }
        public detailsTag<asideTag<T>> details { get{ return new (this); } }
        public dfnTag<asideTag<T>> dfn { get{ return new (this); } }
        public dialogTag<asideTag<T>> dialog { get{ return new (this); } }
        public divTag<asideTag<T>> div { get{ return new (this); } }
        public htmlTag<asideTag<T>> html { get{ return new (this); } }
        public tableTag<asideTag<T>> table { get{ return new (this); } }
        public templateTag<asideTag<T>> template { get{ return new (this); } }
        public textareaTag<asideTag<T>> textarea { get{ return new (this); } }
        public timeTag<asideTag<T>> time { get{ return new (this); } }
        public titleTag<asideTag<T>> title { get{ return new (this); } }
        public asideTag() : base("aside") { }
        public asideTag(T parent) : base("aside", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public asideTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public asideTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public asideTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<asideTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<asideTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<asideTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<asideTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<asideTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<asideTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<asideTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<asideTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<asideTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<asideTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<asideTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<asideTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<asideTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<asideTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<asideTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<asideTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<asideTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<asideTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<asideTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<asideTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<asideTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<asideTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<asideTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<asideTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<asideTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<asideTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<asideTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<asideTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class audioTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T audio_ { get{ return _parent; } }
        public audioTag() : base("audio") { }
        public audioTag(T parent) : base("audio", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public audioTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public audioTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public audioTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class bTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T b_ { get{ return _parent; } }
        public aTag<bTag<T>> a { get{ return new (this); } }
        public abbrTag<bTag<T>> abbr { get{ return new (this); } }
        public addressTag<bTag<T>> address { get{ return new (this); } }
        public articleTag<bTag<T>> article { get{ return new (this); } }
        public asideTag<bTag<T>> aside { get{ return new (this); } }
        public audioTag<bTag<T>> audio { get{ return new (this); } }
        public bTag<bTag<T>> b { get{ return new (this); } }
        public bdiTag<bTag<T>> bdi { get{ return new (this); } }
        public bdoTag<bTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<bTag<T>> blockquote { get{ return new (this); } }
        public brTag<bTag<T>> br { get{ return new (this); } }
        public buttonTag<bTag<T>> button { get{ return new (this); } }
        public canvasTag<bTag<T>> canvas { get{ return new (this); } }
        public citeTag<bTag<T>> cite { get{ return new (this); } }
        public codeTag<bTag<T>> code { get{ return new (this); } }
        public dataTag<bTag<T>> data { get{ return new (this); } }
        public delTag<bTag<T>> del { get{ return new (this); } }
        public detailsTag<bTag<T>> details { get{ return new (this); } }
        public dfnTag<bTag<T>> dfn { get{ return new (this); } }
        public dialogTag<bTag<T>> dialog { get{ return new (this); } }
        public divTag<bTag<T>> div { get{ return new (this); } }
        public htmlTag<bTag<T>> html { get{ return new (this); } }
        public tableTag<bTag<T>> table { get{ return new (this); } }
        public templateTag<bTag<T>> template { get{ return new (this); } }
        public textareaTag<bTag<T>> textarea { get{ return new (this); } }
        public timeTag<bTag<T>> time { get{ return new (this); } }
        public titleTag<bTag<T>> title { get{ return new (this); } }
        public bTag() : base("b") { }
        public bTag(T parent) : base("b", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public bTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public bTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public bTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<bTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<bTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<bTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<bTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<bTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<bTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<bTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<bTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<bTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<bTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<bTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<bTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<bTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<bTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<bTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<bTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<bTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<bTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<bTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<bTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<bTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<bTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<bTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<bTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<bTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<bTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<bTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<bTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class base_Tag<T> : Tag where T : Tag
    {
        private T _parent;
        public T base__ { get{ return _parent; } }
        public aTag<base_Tag<T>> a { get{ return new (this); } }
        public abbrTag<base_Tag<T>> abbr { get{ return new (this); } }
        public addressTag<base_Tag<T>> address { get{ return new (this); } }
        public articleTag<base_Tag<T>> article { get{ return new (this); } }
        public asideTag<base_Tag<T>> aside { get{ return new (this); } }
        public audioTag<base_Tag<T>> audio { get{ return new (this); } }
        public bTag<base_Tag<T>> b { get{ return new (this); } }
        public bdiTag<base_Tag<T>> bdi { get{ return new (this); } }
        public bdoTag<base_Tag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<base_Tag<T>> blockquote { get{ return new (this); } }
        public brTag<base_Tag<T>> br { get{ return new (this); } }
        public buttonTag<base_Tag<T>> button { get{ return new (this); } }
        public canvasTag<base_Tag<T>> canvas { get{ return new (this); } }
        public citeTag<base_Tag<T>> cite { get{ return new (this); } }
        public codeTag<base_Tag<T>> code { get{ return new (this); } }
        public dataTag<base_Tag<T>> data { get{ return new (this); } }
        public delTag<base_Tag<T>> del { get{ return new (this); } }
        public detailsTag<base_Tag<T>> details { get{ return new (this); } }
        public dfnTag<base_Tag<T>> dfn { get{ return new (this); } }
        public dialogTag<base_Tag<T>> dialog { get{ return new (this); } }
        public divTag<base_Tag<T>> div { get{ return new (this); } }
        public htmlTag<base_Tag<T>> html { get{ return new (this); } }
        public tableTag<base_Tag<T>> table { get{ return new (this); } }
        public templateTag<base_Tag<T>> template { get{ return new (this); } }
        public textareaTag<base_Tag<T>> textarea { get{ return new (this); } }
        public timeTag<base_Tag<T>> time { get{ return new (this); } }
        public titleTag<base_Tag<T>> title { get{ return new (this); } }
        public base_Tag() : base("base_") { }
        public base_Tag(T parent) : base("base_", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public base_Tag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public base_Tag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public base_Tag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<base_Tag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<base_Tag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<base_Tag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<base_Tag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<base_Tag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<base_Tag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<base_Tag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<base_Tag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<base_Tag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<base_Tag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<base_Tag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<base_Tag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<base_Tag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<base_Tag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<base_Tag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<base_Tag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<base_Tag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<base_Tag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<base_Tag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<base_Tag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<base_Tag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<base_Tag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<base_Tag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<base_Tag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<base_Tag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<base_Tag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<base_Tag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<base_Tag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class bdiTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T bdi_ { get{ return _parent; } }
        public aTag<bdiTag<T>> a { get{ return new (this); } }
        public abbrTag<bdiTag<T>> abbr { get{ return new (this); } }
        public addressTag<bdiTag<T>> address { get{ return new (this); } }
        public articleTag<bdiTag<T>> article { get{ return new (this); } }
        public asideTag<bdiTag<T>> aside { get{ return new (this); } }
        public audioTag<bdiTag<T>> audio { get{ return new (this); } }
        public bTag<bdiTag<T>> b { get{ return new (this); } }
        public bdiTag<bdiTag<T>> bdi { get{ return new (this); } }
        public bdoTag<bdiTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<bdiTag<T>> blockquote { get{ return new (this); } }
        public brTag<bdiTag<T>> br { get{ return new (this); } }
        public buttonTag<bdiTag<T>> button { get{ return new (this); } }
        public canvasTag<bdiTag<T>> canvas { get{ return new (this); } }
        public citeTag<bdiTag<T>> cite { get{ return new (this); } }
        public codeTag<bdiTag<T>> code { get{ return new (this); } }
        public dataTag<bdiTag<T>> data { get{ return new (this); } }
        public delTag<bdiTag<T>> del { get{ return new (this); } }
        public detailsTag<bdiTag<T>> details { get{ return new (this); } }
        public dfnTag<bdiTag<T>> dfn { get{ return new (this); } }
        public dialogTag<bdiTag<T>> dialog { get{ return new (this); } }
        public divTag<bdiTag<T>> div { get{ return new (this); } }
        public htmlTag<bdiTag<T>> html { get{ return new (this); } }
        public tableTag<bdiTag<T>> table { get{ return new (this); } }
        public templateTag<bdiTag<T>> template { get{ return new (this); } }
        public textareaTag<bdiTag<T>> textarea { get{ return new (this); } }
        public timeTag<bdiTag<T>> time { get{ return new (this); } }
        public titleTag<bdiTag<T>> title { get{ return new (this); } }
        public bdiTag() : base("bdi") { }
        public bdiTag(T parent) : base("bdi", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public bdiTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public bdiTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public bdiTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<bdiTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<bdiTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<bdiTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<bdiTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<bdiTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<bdiTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<bdiTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<bdiTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<bdiTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<bdiTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<bdiTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<bdiTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<bdiTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<bdiTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<bdiTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<bdiTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<bdiTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<bdiTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<bdiTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<bdiTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<bdiTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<bdiTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<bdiTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<bdiTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<bdiTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<bdiTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<bdiTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<bdiTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class bdoTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T bdo_ { get{ return _parent; } }
        public aTag<bdoTag<T>> a { get{ return new (this); } }
        public abbrTag<bdoTag<T>> abbr { get{ return new (this); } }
        public addressTag<bdoTag<T>> address { get{ return new (this); } }
        public articleTag<bdoTag<T>> article { get{ return new (this); } }
        public asideTag<bdoTag<T>> aside { get{ return new (this); } }
        public audioTag<bdoTag<T>> audio { get{ return new (this); } }
        public bTag<bdoTag<T>> b { get{ return new (this); } }
        public bdiTag<bdoTag<T>> bdi { get{ return new (this); } }
        public bdoTag<bdoTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<bdoTag<T>> blockquote { get{ return new (this); } }
        public brTag<bdoTag<T>> br { get{ return new (this); } }
        public buttonTag<bdoTag<T>> button { get{ return new (this); } }
        public canvasTag<bdoTag<T>> canvas { get{ return new (this); } }
        public citeTag<bdoTag<T>> cite { get{ return new (this); } }
        public codeTag<bdoTag<T>> code { get{ return new (this); } }
        public dataTag<bdoTag<T>> data { get{ return new (this); } }
        public delTag<bdoTag<T>> del { get{ return new (this); } }
        public detailsTag<bdoTag<T>> details { get{ return new (this); } }
        public dfnTag<bdoTag<T>> dfn { get{ return new (this); } }
        public dialogTag<bdoTag<T>> dialog { get{ return new (this); } }
        public divTag<bdoTag<T>> div { get{ return new (this); } }
        public htmlTag<bdoTag<T>> html { get{ return new (this); } }
        public tableTag<bdoTag<T>> table { get{ return new (this); } }
        public templateTag<bdoTag<T>> template { get{ return new (this); } }
        public textareaTag<bdoTag<T>> textarea { get{ return new (this); } }
        public timeTag<bdoTag<T>> time { get{ return new (this); } }
        public titleTag<bdoTag<T>> title { get{ return new (this); } }
        public bdoTag() : base("bdo") { }
        public bdoTag(T parent) : base("bdo", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public bdoTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public bdoTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public bdoTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<bdoTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<bdoTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<bdoTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<bdoTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<bdoTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<bdoTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<bdoTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<bdoTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<bdoTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<bdoTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<bdoTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<bdoTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<bdoTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<bdoTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<bdoTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<bdoTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<bdoTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<bdoTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<bdoTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<bdoTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<bdoTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<bdoTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<bdoTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<bdoTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<bdoTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<bdoTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<bdoTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<bdoTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class blockquoteTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T blockquote_ { get{ return _parent; } }
        public aTag<blockquoteTag<T>> a { get{ return new (this); } }
        public abbrTag<blockquoteTag<T>> abbr { get{ return new (this); } }
        public addressTag<blockquoteTag<T>> address { get{ return new (this); } }
        public articleTag<blockquoteTag<T>> article { get{ return new (this); } }
        public asideTag<blockquoteTag<T>> aside { get{ return new (this); } }
        public audioTag<blockquoteTag<T>> audio { get{ return new (this); } }
        public bTag<blockquoteTag<T>> b { get{ return new (this); } }
        public bdiTag<blockquoteTag<T>> bdi { get{ return new (this); } }
        public bdoTag<blockquoteTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<blockquoteTag<T>> blockquote { get{ return new (this); } }
        public brTag<blockquoteTag<T>> br { get{ return new (this); } }
        public buttonTag<blockquoteTag<T>> button { get{ return new (this); } }
        public canvasTag<blockquoteTag<T>> canvas { get{ return new (this); } }
        public citeTag<blockquoteTag<T>> cite { get{ return new (this); } }
        public codeTag<blockquoteTag<T>> code { get{ return new (this); } }
        public dataTag<blockquoteTag<T>> data { get{ return new (this); } }
        public delTag<blockquoteTag<T>> del { get{ return new (this); } }
        public detailsTag<blockquoteTag<T>> details { get{ return new (this); } }
        public dfnTag<blockquoteTag<T>> dfn { get{ return new (this); } }
        public dialogTag<blockquoteTag<T>> dialog { get{ return new (this); } }
        public divTag<blockquoteTag<T>> div { get{ return new (this); } }
        public htmlTag<blockquoteTag<T>> html { get{ return new (this); } }
        public tableTag<blockquoteTag<T>> table { get{ return new (this); } }
        public templateTag<blockquoteTag<T>> template { get{ return new (this); } }
        public textareaTag<blockquoteTag<T>> textarea { get{ return new (this); } }
        public timeTag<blockquoteTag<T>> time { get{ return new (this); } }
        public titleTag<blockquoteTag<T>> title { get{ return new (this); } }
        public blockquoteTag() : base("blockquote") { }
        public blockquoteTag(T parent) : base("blockquote", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public blockquoteTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public blockquoteTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public blockquoteTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<blockquoteTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<blockquoteTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<blockquoteTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<blockquoteTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<blockquoteTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<blockquoteTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<blockquoteTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<blockquoteTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<blockquoteTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<blockquoteTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<blockquoteTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<blockquoteTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<blockquoteTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<blockquoteTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<blockquoteTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<blockquoteTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<blockquoteTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<blockquoteTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<blockquoteTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<blockquoteTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<blockquoteTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<blockquoteTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<blockquoteTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<blockquoteTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<blockquoteTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<blockquoteTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<blockquoteTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<blockquoteTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class bodyTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T body_ { get{ return _parent; } }
        public aTag<bodyTag<T>> a { get{ return new (this); } }
        public abbrTag<bodyTag<T>> abbr { get{ return new (this); } }
        public addressTag<bodyTag<T>> address { get{ return new (this); } }
        public articleTag<bodyTag<T>> article { get{ return new (this); } }
        public asideTag<bodyTag<T>> aside { get{ return new (this); } }
        public audioTag<bodyTag<T>> audio { get{ return new (this); } }
        public bTag<bodyTag<T>> b { get{ return new (this); } }
        public bdiTag<bodyTag<T>> bdi { get{ return new (this); } }
        public bdoTag<bodyTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<bodyTag<T>> blockquote { get{ return new (this); } }
        public brTag<bodyTag<T>> br { get{ return new (this); } }
        public buttonTag<bodyTag<T>> button { get{ return new (this); } }
        public canvasTag<bodyTag<T>> canvas { get{ return new (this); } }
        public citeTag<bodyTag<T>> cite { get{ return new (this); } }
        public codeTag<bodyTag<T>> code { get{ return new (this); } }
        public dataTag<bodyTag<T>> data { get{ return new (this); } }
        public delTag<bodyTag<T>> del { get{ return new (this); } }
        public detailsTag<bodyTag<T>> details { get{ return new (this); } }
        public dfnTag<bodyTag<T>> dfn { get{ return new (this); } }
        public dialogTag<bodyTag<T>> dialog { get{ return new (this); } }
        public divTag<bodyTag<T>> div { get{ return new (this); } }
        public htmlTag<bodyTag<T>> html { get{ return new (this); } }
        public tableTag<bodyTag<T>> table { get{ return new (this); } }
        public templateTag<bodyTag<T>> template { get{ return new (this); } }
        public textareaTag<bodyTag<T>> textarea { get{ return new (this); } }
        public timeTag<bodyTag<T>> time { get{ return new (this); } }
        public titleTag<bodyTag<T>> title { get{ return new (this); } }
        public bodyTag() : base("body") { }
        public bodyTag(T parent) : base("body", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public bodyTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public bodyTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public bodyTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<bodyTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<bodyTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<bodyTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<bodyTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<bodyTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<bodyTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<bodyTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<bodyTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<bodyTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<bodyTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<bodyTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<bodyTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<bodyTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<bodyTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<bodyTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<bodyTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<bodyTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<bodyTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<bodyTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<bodyTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<bodyTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<bodyTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<bodyTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<bodyTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<bodyTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<bodyTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<bodyTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<bodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class brTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T br_ { get{ return _parent; } }
        public aTag<brTag<T>> a { get{ return new (this); } }
        public abbrTag<brTag<T>> abbr { get{ return new (this); } }
        public addressTag<brTag<T>> address { get{ return new (this); } }
        public articleTag<brTag<T>> article { get{ return new (this); } }
        public asideTag<brTag<T>> aside { get{ return new (this); } }
        public audioTag<brTag<T>> audio { get{ return new (this); } }
        public bTag<brTag<T>> b { get{ return new (this); } }
        public bdiTag<brTag<T>> bdi { get{ return new (this); } }
        public bdoTag<brTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<brTag<T>> blockquote { get{ return new (this); } }
        public brTag<brTag<T>> br { get{ return new (this); } }
        public buttonTag<brTag<T>> button { get{ return new (this); } }
        public canvasTag<brTag<T>> canvas { get{ return new (this); } }
        public citeTag<brTag<T>> cite { get{ return new (this); } }
        public codeTag<brTag<T>> code { get{ return new (this); } }
        public dataTag<brTag<T>> data { get{ return new (this); } }
        public delTag<brTag<T>> del { get{ return new (this); } }
        public detailsTag<brTag<T>> details { get{ return new (this); } }
        public dfnTag<brTag<T>> dfn { get{ return new (this); } }
        public dialogTag<brTag<T>> dialog { get{ return new (this); } }
        public divTag<brTag<T>> div { get{ return new (this); } }
        public htmlTag<brTag<T>> html { get{ return new (this); } }
        public tableTag<brTag<T>> table { get{ return new (this); } }
        public templateTag<brTag<T>> template { get{ return new (this); } }
        public textareaTag<brTag<T>> textarea { get{ return new (this); } }
        public timeTag<brTag<T>> time { get{ return new (this); } }
        public titleTag<brTag<T>> title { get{ return new (this); } }
        public brTag() : base("br") { }
        public brTag(T parent) : base("br", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public brTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public brTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public brTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<brTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<brTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<brTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<brTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<brTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<brTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<brTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<brTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<brTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<brTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<brTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<brTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<brTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<brTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<brTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<brTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<brTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<brTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<brTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<brTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<brTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<brTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<brTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<brTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<brTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<brTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<brTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<brTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class buttonTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T button_ { get{ return _parent; } }
        public aTag<buttonTag<T>> a { get{ return new (this); } }
        public abbrTag<buttonTag<T>> abbr { get{ return new (this); } }
        public addressTag<buttonTag<T>> address { get{ return new (this); } }
        public articleTag<buttonTag<T>> article { get{ return new (this); } }
        public asideTag<buttonTag<T>> aside { get{ return new (this); } }
        public audioTag<buttonTag<T>> audio { get{ return new (this); } }
        public bTag<buttonTag<T>> b { get{ return new (this); } }
        public bdiTag<buttonTag<T>> bdi { get{ return new (this); } }
        public bdoTag<buttonTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<buttonTag<T>> blockquote { get{ return new (this); } }
        public brTag<buttonTag<T>> br { get{ return new (this); } }
        public buttonTag<buttonTag<T>> button { get{ return new (this); } }
        public canvasTag<buttonTag<T>> canvas { get{ return new (this); } }
        public citeTag<buttonTag<T>> cite { get{ return new (this); } }
        public codeTag<buttonTag<T>> code { get{ return new (this); } }
        public dataTag<buttonTag<T>> data { get{ return new (this); } }
        public delTag<buttonTag<T>> del { get{ return new (this); } }
        public detailsTag<buttonTag<T>> details { get{ return new (this); } }
        public dfnTag<buttonTag<T>> dfn { get{ return new (this); } }
        public dialogTag<buttonTag<T>> dialog { get{ return new (this); } }
        public divTag<buttonTag<T>> div { get{ return new (this); } }
        public htmlTag<buttonTag<T>> html { get{ return new (this); } }
        public tableTag<buttonTag<T>> table { get{ return new (this); } }
        public templateTag<buttonTag<T>> template { get{ return new (this); } }
        public textareaTag<buttonTag<T>> textarea { get{ return new (this); } }
        public timeTag<buttonTag<T>> time { get{ return new (this); } }
        public titleTag<buttonTag<T>> title { get{ return new (this); } }
        public buttonTag() : base("button") { }
        public buttonTag(T parent) : base("button", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public buttonTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public buttonTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public buttonTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<buttonTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<buttonTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<buttonTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<buttonTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<buttonTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<buttonTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<buttonTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<buttonTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<buttonTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<buttonTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<buttonTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<buttonTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<buttonTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<buttonTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<buttonTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<buttonTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<buttonTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<buttonTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<buttonTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<buttonTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<buttonTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<buttonTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<buttonTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<buttonTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<buttonTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<buttonTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<buttonTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<buttonTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class canvasTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T canvas_ { get{ return _parent; } }
        public aTag<canvasTag<T>> a { get{ return new (this); } }
        public abbrTag<canvasTag<T>> abbr { get{ return new (this); } }
        public addressTag<canvasTag<T>> address { get{ return new (this); } }
        public articleTag<canvasTag<T>> article { get{ return new (this); } }
        public asideTag<canvasTag<T>> aside { get{ return new (this); } }
        public audioTag<canvasTag<T>> audio { get{ return new (this); } }
        public bTag<canvasTag<T>> b { get{ return new (this); } }
        public bdiTag<canvasTag<T>> bdi { get{ return new (this); } }
        public bdoTag<canvasTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<canvasTag<T>> blockquote { get{ return new (this); } }
        public brTag<canvasTag<T>> br { get{ return new (this); } }
        public buttonTag<canvasTag<T>> button { get{ return new (this); } }
        public canvasTag<canvasTag<T>> canvas { get{ return new (this); } }
        public citeTag<canvasTag<T>> cite { get{ return new (this); } }
        public codeTag<canvasTag<T>> code { get{ return new (this); } }
        public dataTag<canvasTag<T>> data { get{ return new (this); } }
        public delTag<canvasTag<T>> del { get{ return new (this); } }
        public detailsTag<canvasTag<T>> details { get{ return new (this); } }
        public dfnTag<canvasTag<T>> dfn { get{ return new (this); } }
        public dialogTag<canvasTag<T>> dialog { get{ return new (this); } }
        public divTag<canvasTag<T>> div { get{ return new (this); } }
        public htmlTag<canvasTag<T>> html { get{ return new (this); } }
        public tableTag<canvasTag<T>> table { get{ return new (this); } }
        public templateTag<canvasTag<T>> template { get{ return new (this); } }
        public textareaTag<canvasTag<T>> textarea { get{ return new (this); } }
        public timeTag<canvasTag<T>> time { get{ return new (this); } }
        public titleTag<canvasTag<T>> title { get{ return new (this); } }
        public canvasTag() : base("canvas") { }
        public canvasTag(T parent) : base("canvas", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public canvasTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public canvasTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public canvasTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<canvasTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<canvasTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<canvasTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<canvasTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<canvasTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<canvasTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<canvasTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<canvasTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<canvasTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<canvasTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<canvasTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<canvasTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<canvasTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<canvasTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<canvasTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<canvasTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<canvasTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<canvasTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<canvasTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<canvasTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<canvasTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<canvasTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<canvasTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<canvasTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<canvasTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<canvasTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<canvasTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<canvasTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class captionTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T caption_ { get{ return _parent; } }
        public aTag<captionTag<T>> a { get{ return new (this); } }
        public abbrTag<captionTag<T>> abbr { get{ return new (this); } }
        public addressTag<captionTag<T>> address { get{ return new (this); } }
        public articleTag<captionTag<T>> article { get{ return new (this); } }
        public asideTag<captionTag<T>> aside { get{ return new (this); } }
        public audioTag<captionTag<T>> audio { get{ return new (this); } }
        public bTag<captionTag<T>> b { get{ return new (this); } }
        public bdiTag<captionTag<T>> bdi { get{ return new (this); } }
        public bdoTag<captionTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<captionTag<T>> blockquote { get{ return new (this); } }
        public brTag<captionTag<T>> br { get{ return new (this); } }
        public buttonTag<captionTag<T>> button { get{ return new (this); } }
        public canvasTag<captionTag<T>> canvas { get{ return new (this); } }
        public citeTag<captionTag<T>> cite { get{ return new (this); } }
        public codeTag<captionTag<T>> code { get{ return new (this); } }
        public dataTag<captionTag<T>> data { get{ return new (this); } }
        public delTag<captionTag<T>> del { get{ return new (this); } }
        public detailsTag<captionTag<T>> details { get{ return new (this); } }
        public dfnTag<captionTag<T>> dfn { get{ return new (this); } }
        public dialogTag<captionTag<T>> dialog { get{ return new (this); } }
        public divTag<captionTag<T>> div { get{ return new (this); } }
        public htmlTag<captionTag<T>> html { get{ return new (this); } }
        public tableTag<captionTag<T>> table { get{ return new (this); } }
        public templateTag<captionTag<T>> template { get{ return new (this); } }
        public textareaTag<captionTag<T>> textarea { get{ return new (this); } }
        public timeTag<captionTag<T>> time { get{ return new (this); } }
        public titleTag<captionTag<T>> title { get{ return new (this); } }
        public captionTag() : base("caption") { }
        public captionTag(T parent) : base("caption", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public captionTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public captionTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public captionTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<captionTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<captionTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<captionTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<captionTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<captionTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<captionTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<captionTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<captionTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<captionTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<captionTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<captionTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<captionTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<captionTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<captionTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<captionTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<captionTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<captionTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<captionTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<captionTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<captionTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<captionTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<captionTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<captionTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<captionTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<captionTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<captionTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<captionTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<captionTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class citeTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T cite_ { get{ return _parent; } }
        public aTag<citeTag<T>> a { get{ return new (this); } }
        public abbrTag<citeTag<T>> abbr { get{ return new (this); } }
        public addressTag<citeTag<T>> address { get{ return new (this); } }
        public articleTag<citeTag<T>> article { get{ return new (this); } }
        public asideTag<citeTag<T>> aside { get{ return new (this); } }
        public audioTag<citeTag<T>> audio { get{ return new (this); } }
        public bTag<citeTag<T>> b { get{ return new (this); } }
        public bdiTag<citeTag<T>> bdi { get{ return new (this); } }
        public bdoTag<citeTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<citeTag<T>> blockquote { get{ return new (this); } }
        public brTag<citeTag<T>> br { get{ return new (this); } }
        public buttonTag<citeTag<T>> button { get{ return new (this); } }
        public canvasTag<citeTag<T>> canvas { get{ return new (this); } }
        public citeTag<citeTag<T>> cite { get{ return new (this); } }
        public codeTag<citeTag<T>> code { get{ return new (this); } }
        public dataTag<citeTag<T>> data { get{ return new (this); } }
        public delTag<citeTag<T>> del { get{ return new (this); } }
        public detailsTag<citeTag<T>> details { get{ return new (this); } }
        public dfnTag<citeTag<T>> dfn { get{ return new (this); } }
        public dialogTag<citeTag<T>> dialog { get{ return new (this); } }
        public divTag<citeTag<T>> div { get{ return new (this); } }
        public htmlTag<citeTag<T>> html { get{ return new (this); } }
        public tableTag<citeTag<T>> table { get{ return new (this); } }
        public templateTag<citeTag<T>> template { get{ return new (this); } }
        public textareaTag<citeTag<T>> textarea { get{ return new (this); } }
        public timeTag<citeTag<T>> time { get{ return new (this); } }
        public titleTag<citeTag<T>> title { get{ return new (this); } }
        public citeTag() : base("cite") { }
        public citeTag(T parent) : base("cite", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public citeTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public citeTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public citeTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<citeTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<citeTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<citeTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<citeTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<citeTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<citeTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<citeTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<citeTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<citeTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<citeTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<citeTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<citeTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<citeTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<citeTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<citeTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<citeTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<citeTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<citeTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<citeTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<citeTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<citeTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<citeTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<citeTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<citeTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<citeTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<citeTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<citeTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<citeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class codeTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T code_ { get{ return _parent; } }
        public aTag<codeTag<T>> a { get{ return new (this); } }
        public abbrTag<codeTag<T>> abbr { get{ return new (this); } }
        public addressTag<codeTag<T>> address { get{ return new (this); } }
        public articleTag<codeTag<T>> article { get{ return new (this); } }
        public asideTag<codeTag<T>> aside { get{ return new (this); } }
        public audioTag<codeTag<T>> audio { get{ return new (this); } }
        public bTag<codeTag<T>> b { get{ return new (this); } }
        public bdiTag<codeTag<T>> bdi { get{ return new (this); } }
        public bdoTag<codeTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<codeTag<T>> blockquote { get{ return new (this); } }
        public brTag<codeTag<T>> br { get{ return new (this); } }
        public buttonTag<codeTag<T>> button { get{ return new (this); } }
        public canvasTag<codeTag<T>> canvas { get{ return new (this); } }
        public citeTag<codeTag<T>> cite { get{ return new (this); } }
        public codeTag<codeTag<T>> code { get{ return new (this); } }
        public dataTag<codeTag<T>> data { get{ return new (this); } }
        public delTag<codeTag<T>> del { get{ return new (this); } }
        public detailsTag<codeTag<T>> details { get{ return new (this); } }
        public dfnTag<codeTag<T>> dfn { get{ return new (this); } }
        public dialogTag<codeTag<T>> dialog { get{ return new (this); } }
        public divTag<codeTag<T>> div { get{ return new (this); } }
        public htmlTag<codeTag<T>> html { get{ return new (this); } }
        public tableTag<codeTag<T>> table { get{ return new (this); } }
        public templateTag<codeTag<T>> template { get{ return new (this); } }
        public textareaTag<codeTag<T>> textarea { get{ return new (this); } }
        public timeTag<codeTag<T>> time { get{ return new (this); } }
        public titleTag<codeTag<T>> title { get{ return new (this); } }
        public codeTag() : base("code") { }
        public codeTag(T parent) : base("code", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public codeTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public codeTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public codeTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<codeTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<codeTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<codeTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<codeTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<codeTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<codeTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<codeTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<codeTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<codeTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<codeTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<codeTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<codeTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<codeTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<codeTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<codeTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<codeTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<codeTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<codeTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<codeTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<codeTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<codeTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<codeTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<codeTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<codeTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<codeTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<codeTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<codeTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<codeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class colTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T col_ { get{ return _parent; } }
        public aTag<colTag<T>> a { get{ return new (this); } }
        public abbrTag<colTag<T>> abbr { get{ return new (this); } }
        public addressTag<colTag<T>> address { get{ return new (this); } }
        public articleTag<colTag<T>> article { get{ return new (this); } }
        public asideTag<colTag<T>> aside { get{ return new (this); } }
        public audioTag<colTag<T>> audio { get{ return new (this); } }
        public bTag<colTag<T>> b { get{ return new (this); } }
        public bdiTag<colTag<T>> bdi { get{ return new (this); } }
        public bdoTag<colTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<colTag<T>> blockquote { get{ return new (this); } }
        public brTag<colTag<T>> br { get{ return new (this); } }
        public buttonTag<colTag<T>> button { get{ return new (this); } }
        public canvasTag<colTag<T>> canvas { get{ return new (this); } }
        public citeTag<colTag<T>> cite { get{ return new (this); } }
        public codeTag<colTag<T>> code { get{ return new (this); } }
        public dataTag<colTag<T>> data { get{ return new (this); } }
        public delTag<colTag<T>> del { get{ return new (this); } }
        public detailsTag<colTag<T>> details { get{ return new (this); } }
        public dfnTag<colTag<T>> dfn { get{ return new (this); } }
        public dialogTag<colTag<T>> dialog { get{ return new (this); } }
        public divTag<colTag<T>> div { get{ return new (this); } }
        public htmlTag<colTag<T>> html { get{ return new (this); } }
        public tableTag<colTag<T>> table { get{ return new (this); } }
        public templateTag<colTag<T>> template { get{ return new (this); } }
        public textareaTag<colTag<T>> textarea { get{ return new (this); } }
        public timeTag<colTag<T>> time { get{ return new (this); } }
        public titleTag<colTag<T>> title { get{ return new (this); } }
        public colTag() : base("col") { }
        public colTag(T parent) : base("col", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public colTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public colTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public colTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<colTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<colTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<colTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<colTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<colTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<colTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<colTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<colTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<colTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<colTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<colTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<colTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<colTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<colTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<colTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<colTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<colTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<colTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<colTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<colTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<colTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<colTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<colTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<colTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<colTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<colTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<colTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<colTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class colgroupTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T colgroup_ { get{ return _parent; } }
        public colTag<colgroupTag<T>> col { get{ return new (this); } }
        public colgroupTag() : base("colgroup") { }
        public colgroupTag(T parent) : base("colgroup", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public colgroupTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public colgroupTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public colgroupTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public colTag<colgroupTag<T>> Col(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            colTag<colgroupTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class dataTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T data_ { get{ return _parent; } }
        public aTag<dataTag<T>> a { get{ return new (this); } }
        public abbrTag<dataTag<T>> abbr { get{ return new (this); } }
        public addressTag<dataTag<T>> address { get{ return new (this); } }
        public articleTag<dataTag<T>> article { get{ return new (this); } }
        public asideTag<dataTag<T>> aside { get{ return new (this); } }
        public audioTag<dataTag<T>> audio { get{ return new (this); } }
        public bTag<dataTag<T>> b { get{ return new (this); } }
        public bdiTag<dataTag<T>> bdi { get{ return new (this); } }
        public bdoTag<dataTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<dataTag<T>> blockquote { get{ return new (this); } }
        public brTag<dataTag<T>> br { get{ return new (this); } }
        public buttonTag<dataTag<T>> button { get{ return new (this); } }
        public canvasTag<dataTag<T>> canvas { get{ return new (this); } }
        public citeTag<dataTag<T>> cite { get{ return new (this); } }
        public codeTag<dataTag<T>> code { get{ return new (this); } }
        public dataTag<dataTag<T>> data { get{ return new (this); } }
        public delTag<dataTag<T>> del { get{ return new (this); } }
        public detailsTag<dataTag<T>> details { get{ return new (this); } }
        public dfnTag<dataTag<T>> dfn { get{ return new (this); } }
        public dialogTag<dataTag<T>> dialog { get{ return new (this); } }
        public divTag<dataTag<T>> div { get{ return new (this); } }
        public htmlTag<dataTag<T>> html { get{ return new (this); } }
        public tableTag<dataTag<T>> table { get{ return new (this); } }
        public templateTag<dataTag<T>> template { get{ return new (this); } }
        public textareaTag<dataTag<T>> textarea { get{ return new (this); } }
        public timeTag<dataTag<T>> time { get{ return new (this); } }
        public titleTag<dataTag<T>> title { get{ return new (this); } }
        public dataTag() : base("data") { }
        public dataTag(T parent) : base("data", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public dataTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public dataTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public dataTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<dataTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<dataTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<dataTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<dataTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<dataTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<dataTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<dataTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<dataTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<dataTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<dataTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<dataTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<dataTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<dataTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<dataTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<dataTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<dataTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<dataTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<dataTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<dataTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<dataTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<dataTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<dataTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<dataTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<dataTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<dataTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<dataTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<dataTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<dataTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class datalistTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T datalist_ { get{ return _parent; } }
        public datalistTag() : base("datalist") { }
        public datalistTag(T parent) : base("datalist", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public datalistTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public datalistTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public datalistTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class ddTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T dd_ { get{ return _parent; } }
        public aTag<ddTag<T>> a { get{ return new (this); } }
        public abbrTag<ddTag<T>> abbr { get{ return new (this); } }
        public addressTag<ddTag<T>> address { get{ return new (this); } }
        public articleTag<ddTag<T>> article { get{ return new (this); } }
        public asideTag<ddTag<T>> aside { get{ return new (this); } }
        public audioTag<ddTag<T>> audio { get{ return new (this); } }
        public bTag<ddTag<T>> b { get{ return new (this); } }
        public bdiTag<ddTag<T>> bdi { get{ return new (this); } }
        public bdoTag<ddTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<ddTag<T>> blockquote { get{ return new (this); } }
        public brTag<ddTag<T>> br { get{ return new (this); } }
        public buttonTag<ddTag<T>> button { get{ return new (this); } }
        public canvasTag<ddTag<T>> canvas { get{ return new (this); } }
        public citeTag<ddTag<T>> cite { get{ return new (this); } }
        public codeTag<ddTag<T>> code { get{ return new (this); } }
        public dataTag<ddTag<T>> data { get{ return new (this); } }
        public delTag<ddTag<T>> del { get{ return new (this); } }
        public detailsTag<ddTag<T>> details { get{ return new (this); } }
        public dfnTag<ddTag<T>> dfn { get{ return new (this); } }
        public dialogTag<ddTag<T>> dialog { get{ return new (this); } }
        public divTag<ddTag<T>> div { get{ return new (this); } }
        public htmlTag<ddTag<T>> html { get{ return new (this); } }
        public tableTag<ddTag<T>> table { get{ return new (this); } }
        public templateTag<ddTag<T>> template { get{ return new (this); } }
        public textareaTag<ddTag<T>> textarea { get{ return new (this); } }
        public timeTag<ddTag<T>> time { get{ return new (this); } }
        public titleTag<ddTag<T>> title { get{ return new (this); } }
        public ddTag() : base("dd") { }
        public ddTag(T parent) : base("dd", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public ddTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public ddTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public ddTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<ddTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<ddTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<ddTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<ddTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<ddTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<ddTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<ddTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<ddTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<ddTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<ddTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<ddTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<ddTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<ddTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<ddTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<ddTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<ddTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<ddTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<ddTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<ddTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<ddTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<ddTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<ddTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<ddTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<ddTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<ddTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<ddTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<ddTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<ddTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class delTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T del_ { get{ return _parent; } }
        public aTag<delTag<T>> a { get{ return new (this); } }
        public abbrTag<delTag<T>> abbr { get{ return new (this); } }
        public addressTag<delTag<T>> address { get{ return new (this); } }
        public articleTag<delTag<T>> article { get{ return new (this); } }
        public asideTag<delTag<T>> aside { get{ return new (this); } }
        public audioTag<delTag<T>> audio { get{ return new (this); } }
        public bTag<delTag<T>> b { get{ return new (this); } }
        public bdiTag<delTag<T>> bdi { get{ return new (this); } }
        public bdoTag<delTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<delTag<T>> blockquote { get{ return new (this); } }
        public brTag<delTag<T>> br { get{ return new (this); } }
        public buttonTag<delTag<T>> button { get{ return new (this); } }
        public canvasTag<delTag<T>> canvas { get{ return new (this); } }
        public citeTag<delTag<T>> cite { get{ return new (this); } }
        public codeTag<delTag<T>> code { get{ return new (this); } }
        public dataTag<delTag<T>> data { get{ return new (this); } }
        public delTag<delTag<T>> del { get{ return new (this); } }
        public detailsTag<delTag<T>> details { get{ return new (this); } }
        public dfnTag<delTag<T>> dfn { get{ return new (this); } }
        public dialogTag<delTag<T>> dialog { get{ return new (this); } }
        public divTag<delTag<T>> div { get{ return new (this); } }
        public htmlTag<delTag<T>> html { get{ return new (this); } }
        public tableTag<delTag<T>> table { get{ return new (this); } }
        public templateTag<delTag<T>> template { get{ return new (this); } }
        public textareaTag<delTag<T>> textarea { get{ return new (this); } }
        public timeTag<delTag<T>> time { get{ return new (this); } }
        public titleTag<delTag<T>> title { get{ return new (this); } }
        public delTag() : base("del") { }
        public delTag(T parent) : base("del", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public delTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public delTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public delTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<delTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<delTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<delTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<delTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<delTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<delTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<delTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<delTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<delTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<delTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<delTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<delTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<delTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<delTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<delTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<delTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<delTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<delTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<delTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<delTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<delTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<delTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<delTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<delTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<delTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<delTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<delTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<delTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class detailsTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T details_ { get{ return _parent; } }
        public aTag<detailsTag<T>> a { get{ return new (this); } }
        public abbrTag<detailsTag<T>> abbr { get{ return new (this); } }
        public addressTag<detailsTag<T>> address { get{ return new (this); } }
        public articleTag<detailsTag<T>> article { get{ return new (this); } }
        public asideTag<detailsTag<T>> aside { get{ return new (this); } }
        public audioTag<detailsTag<T>> audio { get{ return new (this); } }
        public bTag<detailsTag<T>> b { get{ return new (this); } }
        public bdiTag<detailsTag<T>> bdi { get{ return new (this); } }
        public bdoTag<detailsTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<detailsTag<T>> blockquote { get{ return new (this); } }
        public brTag<detailsTag<T>> br { get{ return new (this); } }
        public buttonTag<detailsTag<T>> button { get{ return new (this); } }
        public canvasTag<detailsTag<T>> canvas { get{ return new (this); } }
        public citeTag<detailsTag<T>> cite { get{ return new (this); } }
        public codeTag<detailsTag<T>> code { get{ return new (this); } }
        public dataTag<detailsTag<T>> data { get{ return new (this); } }
        public delTag<detailsTag<T>> del { get{ return new (this); } }
        public detailsTag<detailsTag<T>> details { get{ return new (this); } }
        public dfnTag<detailsTag<T>> dfn { get{ return new (this); } }
        public dialogTag<detailsTag<T>> dialog { get{ return new (this); } }
        public divTag<detailsTag<T>> div { get{ return new (this); } }
        public htmlTag<detailsTag<T>> html { get{ return new (this); } }
        public tableTag<detailsTag<T>> table { get{ return new (this); } }
        public templateTag<detailsTag<T>> template { get{ return new (this); } }
        public textareaTag<detailsTag<T>> textarea { get{ return new (this); } }
        public timeTag<detailsTag<T>> time { get{ return new (this); } }
        public titleTag<detailsTag<T>> title { get{ return new (this); } }
        public detailsTag() : base("details") { }
        public detailsTag(T parent) : base("details", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public detailsTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public detailsTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public detailsTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<detailsTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<detailsTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<detailsTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<detailsTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<detailsTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<detailsTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<detailsTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<detailsTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<detailsTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<detailsTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<detailsTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<detailsTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<detailsTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<detailsTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<detailsTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<detailsTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<detailsTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<detailsTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<detailsTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<detailsTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<detailsTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<detailsTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<detailsTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<detailsTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<detailsTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<detailsTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<detailsTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<detailsTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class dfnTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T dfn_ { get{ return _parent; } }
        public aTag<dfnTag<T>> a { get{ return new (this); } }
        public abbrTag<dfnTag<T>> abbr { get{ return new (this); } }
        public addressTag<dfnTag<T>> address { get{ return new (this); } }
        public articleTag<dfnTag<T>> article { get{ return new (this); } }
        public asideTag<dfnTag<T>> aside { get{ return new (this); } }
        public audioTag<dfnTag<T>> audio { get{ return new (this); } }
        public bTag<dfnTag<T>> b { get{ return new (this); } }
        public bdiTag<dfnTag<T>> bdi { get{ return new (this); } }
        public bdoTag<dfnTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<dfnTag<T>> blockquote { get{ return new (this); } }
        public brTag<dfnTag<T>> br { get{ return new (this); } }
        public buttonTag<dfnTag<T>> button { get{ return new (this); } }
        public canvasTag<dfnTag<T>> canvas { get{ return new (this); } }
        public citeTag<dfnTag<T>> cite { get{ return new (this); } }
        public codeTag<dfnTag<T>> code { get{ return new (this); } }
        public dataTag<dfnTag<T>> data { get{ return new (this); } }
        public delTag<dfnTag<T>> del { get{ return new (this); } }
        public detailsTag<dfnTag<T>> details { get{ return new (this); } }
        public dfnTag<dfnTag<T>> dfn { get{ return new (this); } }
        public dialogTag<dfnTag<T>> dialog { get{ return new (this); } }
        public divTag<dfnTag<T>> div { get{ return new (this); } }
        public htmlTag<dfnTag<T>> html { get{ return new (this); } }
        public tableTag<dfnTag<T>> table { get{ return new (this); } }
        public templateTag<dfnTag<T>> template { get{ return new (this); } }
        public textareaTag<dfnTag<T>> textarea { get{ return new (this); } }
        public timeTag<dfnTag<T>> time { get{ return new (this); } }
        public titleTag<dfnTag<T>> title { get{ return new (this); } }
        public dfnTag() : base("dfn") { }
        public dfnTag(T parent) : base("dfn", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public dfnTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public dfnTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public dfnTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<dfnTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<dfnTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<dfnTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<dfnTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<dfnTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<dfnTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<dfnTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<dfnTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<dfnTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<dfnTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<dfnTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<dfnTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<dfnTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<dfnTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<dfnTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<dfnTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<dfnTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<dfnTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<dfnTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<dfnTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<dfnTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<dfnTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<dfnTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<dfnTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<dfnTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<dfnTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<dfnTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<dfnTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class dialogTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T dialog_ { get{ return _parent; } }
        public aTag<dialogTag<T>> a { get{ return new (this); } }
        public abbrTag<dialogTag<T>> abbr { get{ return new (this); } }
        public addressTag<dialogTag<T>> address { get{ return new (this); } }
        public articleTag<dialogTag<T>> article { get{ return new (this); } }
        public asideTag<dialogTag<T>> aside { get{ return new (this); } }
        public audioTag<dialogTag<T>> audio { get{ return new (this); } }
        public bTag<dialogTag<T>> b { get{ return new (this); } }
        public bdiTag<dialogTag<T>> bdi { get{ return new (this); } }
        public bdoTag<dialogTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<dialogTag<T>> blockquote { get{ return new (this); } }
        public brTag<dialogTag<T>> br { get{ return new (this); } }
        public buttonTag<dialogTag<T>> button { get{ return new (this); } }
        public canvasTag<dialogTag<T>> canvas { get{ return new (this); } }
        public citeTag<dialogTag<T>> cite { get{ return new (this); } }
        public codeTag<dialogTag<T>> code { get{ return new (this); } }
        public dataTag<dialogTag<T>> data { get{ return new (this); } }
        public delTag<dialogTag<T>> del { get{ return new (this); } }
        public detailsTag<dialogTag<T>> details { get{ return new (this); } }
        public dfnTag<dialogTag<T>> dfn { get{ return new (this); } }
        public dialogTag<dialogTag<T>> dialog { get{ return new (this); } }
        public divTag<dialogTag<T>> div { get{ return new (this); } }
        public htmlTag<dialogTag<T>> html { get{ return new (this); } }
        public tableTag<dialogTag<T>> table { get{ return new (this); } }
        public templateTag<dialogTag<T>> template { get{ return new (this); } }
        public textareaTag<dialogTag<T>> textarea { get{ return new (this); } }
        public timeTag<dialogTag<T>> time { get{ return new (this); } }
        public titleTag<dialogTag<T>> title { get{ return new (this); } }
        public dialogTag() : base("dialog") { }
        public dialogTag(T parent) : base("dialog", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public dialogTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public dialogTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public dialogTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<dialogTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<dialogTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<dialogTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<dialogTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<dialogTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<dialogTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<dialogTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<dialogTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<dialogTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<dialogTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<dialogTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<dialogTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<dialogTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<dialogTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<dialogTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<dialogTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<dialogTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<dialogTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<dialogTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<dialogTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<dialogTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<dialogTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<dialogTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<dialogTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<dialogTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<dialogTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<dialogTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<dialogTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class divTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T div_ { get{ return _parent; } }
        public aTag<divTag<T>> a { get{ return new (this); } }
        public abbrTag<divTag<T>> abbr { get{ return new (this); } }
        public addressTag<divTag<T>> address { get{ return new (this); } }
        public articleTag<divTag<T>> article { get{ return new (this); } }
        public asideTag<divTag<T>> aside { get{ return new (this); } }
        public audioTag<divTag<T>> audio { get{ return new (this); } }
        public bTag<divTag<T>> b { get{ return new (this); } }
        public bdiTag<divTag<T>> bdi { get{ return new (this); } }
        public bdoTag<divTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<divTag<T>> blockquote { get{ return new (this); } }
        public brTag<divTag<T>> br { get{ return new (this); } }
        public buttonTag<divTag<T>> button { get{ return new (this); } }
        public canvasTag<divTag<T>> canvas { get{ return new (this); } }
        public citeTag<divTag<T>> cite { get{ return new (this); } }
        public codeTag<divTag<T>> code { get{ return new (this); } }
        public dataTag<divTag<T>> data { get{ return new (this); } }
        public delTag<divTag<T>> del { get{ return new (this); } }
        public detailsTag<divTag<T>> details { get{ return new (this); } }
        public dfnTag<divTag<T>> dfn { get{ return new (this); } }
        public dialogTag<divTag<T>> dialog { get{ return new (this); } }
        public divTag<divTag<T>> div { get{ return new (this); } }
        public htmlTag<divTag<T>> html { get{ return new (this); } }
        public tableTag<divTag<T>> table { get{ return new (this); } }
        public templateTag<divTag<T>> template { get{ return new (this); } }
        public textareaTag<divTag<T>> textarea { get{ return new (this); } }
        public timeTag<divTag<T>> time { get{ return new (this); } }
        public titleTag<divTag<T>> title { get{ return new (this); } }
        public divTag() : base("div") { }
        public divTag(T parent) : base("div", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public divTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public divTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public divTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<divTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<divTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<divTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<divTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<divTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<divTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<divTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<divTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<divTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<divTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<divTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<divTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<divTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<divTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<divTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<divTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<divTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<divTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<divTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<divTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<divTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<divTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<divTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<divTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<divTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<divTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<divTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<divTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class htmlTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T html_ { get{ return _parent; } }
        public aTag<htmlTag<T>> a { get{ return new (this); } }
        public abbrTag<htmlTag<T>> abbr { get{ return new (this); } }
        public addressTag<htmlTag<T>> address { get{ return new (this); } }
        public articleTag<htmlTag<T>> article { get{ return new (this); } }
        public asideTag<htmlTag<T>> aside { get{ return new (this); } }
        public audioTag<htmlTag<T>> audio { get{ return new (this); } }
        public bTag<htmlTag<T>> b { get{ return new (this); } }
        public bdiTag<htmlTag<T>> bdi { get{ return new (this); } }
        public bdoTag<htmlTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<htmlTag<T>> blockquote { get{ return new (this); } }
        public bodyTag<htmlTag<T>> body { get{ return new (this); } }
        public brTag<htmlTag<T>> br { get{ return new (this); } }
        public buttonTag<htmlTag<T>> button { get{ return new (this); } }
        public canvasTag<htmlTag<T>> canvas { get{ return new (this); } }
        public citeTag<htmlTag<T>> cite { get{ return new (this); } }
        public codeTag<htmlTag<T>> code { get{ return new (this); } }
        public dataTag<htmlTag<T>> data { get{ return new (this); } }
        public delTag<htmlTag<T>> del { get{ return new (this); } }
        public detailsTag<htmlTag<T>> details { get{ return new (this); } }
        public dfnTag<htmlTag<T>> dfn { get{ return new (this); } }
        public dialogTag<htmlTag<T>> dialog { get{ return new (this); } }
        public divTag<htmlTag<T>> div { get{ return new (this); } }
        public htmlTag<htmlTag<T>> html { get{ return new (this); } }
        public tableTag<htmlTag<T>> table { get{ return new (this); } }
        public templateTag<htmlTag<T>> template { get{ return new (this); } }
        public textareaTag<htmlTag<T>> textarea { get{ return new (this); } }
        public timeTag<htmlTag<T>> time { get{ return new (this); } }
        public titleTag<htmlTag<T>> title { get{ return new (this); } }
        public htmlTag() : base("html") { }
        public htmlTag(T parent) : base("html", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public htmlTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public htmlTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public htmlTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<htmlTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<htmlTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<htmlTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<htmlTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<htmlTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<htmlTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<htmlTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<htmlTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<htmlTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<htmlTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bodyTag<htmlTag<T>> Body(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bodyTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<htmlTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<htmlTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<htmlTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<htmlTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<htmlTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<htmlTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<htmlTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<htmlTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<htmlTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<htmlTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<htmlTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<htmlTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<htmlTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<htmlTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<htmlTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<htmlTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<htmlTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<htmlTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class tableTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T table_ { get{ return _parent; } }
        public trTag<tableTag<T>> tr { get{ return new (this); } }
        public thTag<tableTag<T>> th { get{ return new (this); } }
        public tdTag<tableTag<T>> td { get{ return new (this); } }
        public captionTag<tableTag<T>> caption { get{ return new (this); } }
        public colgroupTag<tableTag<T>> colgroup { get{ return new (this); } }
        public theadTag<tableTag<T>> thead { get{ return new (this); } }
        public tfootTag<tableTag<T>> tfoot { get{ return new (this); } }
        public tbodyTag<tableTag<T>> tbody { get{ return new (this); } }
        public tableTag() : base("table") { }
        public tableTag(T parent) : base("table", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public tableTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public tableTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public tableTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public trTag<tableTag<T>> Tr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            trTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public thTag<tableTag<T>> Th(string? innerText = null, string? _abbr = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _scope = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            thTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_abbr != null) result.AddAttribute("abbr", _abbr);
            if (_colspan != null) result.AddAttribute("colspan", _colspan);
            if (_headers != null) result.AddAttribute("headers", _headers);
            if (_rowspan != null) result.AddAttribute("rowspan", _rowspan);
            if (_scope != null) result.AddAttribute("scope", _scope);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tdTag<tableTag<T>> Td(string? innerText = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tdTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_colspan != null) result.AddAttribute("colspan", _colspan);
            if (_headers != null) result.AddAttribute("headers", _headers);
            if (_rowspan != null) result.AddAttribute("rowspan", _rowspan);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public captionTag<tableTag<T>> Caption(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            captionTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public colgroupTag<tableTag<T>> Colgroup(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            colgroupTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public theadTag<tableTag<T>> Thead(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            theadTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tfootTag<tableTag<T>> Tfoot(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tfootTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tbodyTag<tableTag<T>> Tbody(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tbodyTag<tableTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class tbodyTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T tbody_ { get{ return _parent; } }
        public trTag<tbodyTag<T>> tr { get{ return new (this); } }
        public tbodyTag() : base("tbody") { }
        public tbodyTag(T parent) : base("tbody", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public tbodyTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public tbodyTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public tbodyTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public trTag<tbodyTag<T>> Tr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            trTag<tbodyTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class tdTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T td_ { get{ return _parent; } }
        public aTag<tdTag<T>> a { get{ return new (this); } }
        public abbrTag<tdTag<T>> abbr { get{ return new (this); } }
        public addressTag<tdTag<T>> address { get{ return new (this); } }
        public articleTag<tdTag<T>> article { get{ return new (this); } }
        public asideTag<tdTag<T>> aside { get{ return new (this); } }
        public audioTag<tdTag<T>> audio { get{ return new (this); } }
        public bTag<tdTag<T>> b { get{ return new (this); } }
        public bdiTag<tdTag<T>> bdi { get{ return new (this); } }
        public bdoTag<tdTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<tdTag<T>> blockquote { get{ return new (this); } }
        public brTag<tdTag<T>> br { get{ return new (this); } }
        public buttonTag<tdTag<T>> button { get{ return new (this); } }
        public canvasTag<tdTag<T>> canvas { get{ return new (this); } }
        public citeTag<tdTag<T>> cite { get{ return new (this); } }
        public codeTag<tdTag<T>> code { get{ return new (this); } }
        public dataTag<tdTag<T>> data { get{ return new (this); } }
        public delTag<tdTag<T>> del { get{ return new (this); } }
        public detailsTag<tdTag<T>> details { get{ return new (this); } }
        public dfnTag<tdTag<T>> dfn { get{ return new (this); } }
        public dialogTag<tdTag<T>> dialog { get{ return new (this); } }
        public divTag<tdTag<T>> div { get{ return new (this); } }
        public htmlTag<tdTag<T>> html { get{ return new (this); } }
        public tableTag<tdTag<T>> table { get{ return new (this); } }
        public templateTag<tdTag<T>> template { get{ return new (this); } }
        public textareaTag<tdTag<T>> textarea { get{ return new (this); } }
        public timeTag<tdTag<T>> time { get{ return new (this); } }
        public titleTag<tdTag<T>> title { get{ return new (this); } }
        public tdTag() : base("td") { }
        public tdTag(T parent) : base("td", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public tdTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public tdTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public tdTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<tdTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<tdTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<tdTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<tdTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<tdTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<tdTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<tdTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<tdTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<tdTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<tdTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<tdTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<tdTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<tdTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<tdTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<tdTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<tdTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<tdTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<tdTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<tdTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<tdTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<tdTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<tdTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<tdTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<tdTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<tdTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<tdTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<tdTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<tdTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class templateTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T template_ { get{ return _parent; } }
        public aTag<templateTag<T>> a { get{ return new (this); } }
        public abbrTag<templateTag<T>> abbr { get{ return new (this); } }
        public addressTag<templateTag<T>> address { get{ return new (this); } }
        public articleTag<templateTag<T>> article { get{ return new (this); } }
        public asideTag<templateTag<T>> aside { get{ return new (this); } }
        public audioTag<templateTag<T>> audio { get{ return new (this); } }
        public bTag<templateTag<T>> b { get{ return new (this); } }
        public bdiTag<templateTag<T>> bdi { get{ return new (this); } }
        public bdoTag<templateTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<templateTag<T>> blockquote { get{ return new (this); } }
        public brTag<templateTag<T>> br { get{ return new (this); } }
        public buttonTag<templateTag<T>> button { get{ return new (this); } }
        public canvasTag<templateTag<T>> canvas { get{ return new (this); } }
        public citeTag<templateTag<T>> cite { get{ return new (this); } }
        public codeTag<templateTag<T>> code { get{ return new (this); } }
        public dataTag<templateTag<T>> data { get{ return new (this); } }
        public delTag<templateTag<T>> del { get{ return new (this); } }
        public detailsTag<templateTag<T>> details { get{ return new (this); } }
        public dfnTag<templateTag<T>> dfn { get{ return new (this); } }
        public dialogTag<templateTag<T>> dialog { get{ return new (this); } }
        public divTag<templateTag<T>> div { get{ return new (this); } }
        public htmlTag<templateTag<T>> html { get{ return new (this); } }
        public tableTag<templateTag<T>> table { get{ return new (this); } }
        public templateTag<templateTag<T>> template { get{ return new (this); } }
        public textareaTag<templateTag<T>> textarea { get{ return new (this); } }
        public timeTag<templateTag<T>> time { get{ return new (this); } }
        public titleTag<templateTag<T>> title { get{ return new (this); } }
        public templateTag() : base("template") { }
        public templateTag(T parent) : base("template", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public templateTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public templateTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public templateTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<templateTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<templateTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<templateTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<templateTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<templateTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<templateTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<templateTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<templateTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<templateTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<templateTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<templateTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<templateTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<templateTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<templateTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<templateTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<templateTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<templateTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<templateTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<templateTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<templateTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<templateTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<templateTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<templateTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<templateTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<templateTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<templateTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<templateTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<templateTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class textareaTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T textarea_ { get{ return _parent; } }
        public aTag<textareaTag<T>> a { get{ return new (this); } }
        public abbrTag<textareaTag<T>> abbr { get{ return new (this); } }
        public addressTag<textareaTag<T>> address { get{ return new (this); } }
        public articleTag<textareaTag<T>> article { get{ return new (this); } }
        public asideTag<textareaTag<T>> aside { get{ return new (this); } }
        public audioTag<textareaTag<T>> audio { get{ return new (this); } }
        public bTag<textareaTag<T>> b { get{ return new (this); } }
        public bdiTag<textareaTag<T>> bdi { get{ return new (this); } }
        public bdoTag<textareaTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<textareaTag<T>> blockquote { get{ return new (this); } }
        public brTag<textareaTag<T>> br { get{ return new (this); } }
        public buttonTag<textareaTag<T>> button { get{ return new (this); } }
        public canvasTag<textareaTag<T>> canvas { get{ return new (this); } }
        public citeTag<textareaTag<T>> cite { get{ return new (this); } }
        public codeTag<textareaTag<T>> code { get{ return new (this); } }
        public dataTag<textareaTag<T>> data { get{ return new (this); } }
        public delTag<textareaTag<T>> del { get{ return new (this); } }
        public detailsTag<textareaTag<T>> details { get{ return new (this); } }
        public dfnTag<textareaTag<T>> dfn { get{ return new (this); } }
        public dialogTag<textareaTag<T>> dialog { get{ return new (this); } }
        public divTag<textareaTag<T>> div { get{ return new (this); } }
        public htmlTag<textareaTag<T>> html { get{ return new (this); } }
        public tableTag<textareaTag<T>> table { get{ return new (this); } }
        public templateTag<textareaTag<T>> template { get{ return new (this); } }
        public textareaTag<textareaTag<T>> textarea { get{ return new (this); } }
        public timeTag<textareaTag<T>> time { get{ return new (this); } }
        public titleTag<textareaTag<T>> title { get{ return new (this); } }
        public textareaTag() : base("textarea") { }
        public textareaTag(T parent) : base("textarea", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public textareaTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public textareaTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public textareaTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<textareaTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<textareaTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<textareaTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<textareaTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<textareaTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<textareaTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<textareaTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<textareaTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<textareaTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<textareaTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<textareaTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<textareaTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<textareaTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<textareaTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<textareaTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<textareaTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<textareaTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<textareaTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<textareaTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<textareaTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<textareaTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<textareaTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<textareaTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<textareaTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<textareaTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<textareaTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<textareaTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<textareaTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class tfootTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T tfoot_ { get{ return _parent; } }
        public trTag<tfootTag<T>> tr { get{ return new (this); } }
        public tfootTag() : base("tfoot") { }
        public tfootTag(T parent) : base("tfoot", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public tfootTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public tfootTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public tfootTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public trTag<tfootTag<T>> Tr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            trTag<tfootTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class thTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T th_ { get{ return _parent; } }
        public aTag<thTag<T>> a { get{ return new (this); } }
        public abbrTag<thTag<T>> abbr { get{ return new (this); } }
        public addressTag<thTag<T>> address { get{ return new (this); } }
        public articleTag<thTag<T>> article { get{ return new (this); } }
        public asideTag<thTag<T>> aside { get{ return new (this); } }
        public audioTag<thTag<T>> audio { get{ return new (this); } }
        public bTag<thTag<T>> b { get{ return new (this); } }
        public bdiTag<thTag<T>> bdi { get{ return new (this); } }
        public bdoTag<thTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<thTag<T>> blockquote { get{ return new (this); } }
        public brTag<thTag<T>> br { get{ return new (this); } }
        public buttonTag<thTag<T>> button { get{ return new (this); } }
        public canvasTag<thTag<T>> canvas { get{ return new (this); } }
        public citeTag<thTag<T>> cite { get{ return new (this); } }
        public codeTag<thTag<T>> code { get{ return new (this); } }
        public dataTag<thTag<T>> data { get{ return new (this); } }
        public delTag<thTag<T>> del { get{ return new (this); } }
        public detailsTag<thTag<T>> details { get{ return new (this); } }
        public dfnTag<thTag<T>> dfn { get{ return new (this); } }
        public dialogTag<thTag<T>> dialog { get{ return new (this); } }
        public divTag<thTag<T>> div { get{ return new (this); } }
        public htmlTag<thTag<T>> html { get{ return new (this); } }
        public tableTag<thTag<T>> table { get{ return new (this); } }
        public templateTag<thTag<T>> template { get{ return new (this); } }
        public textareaTag<thTag<T>> textarea { get{ return new (this); } }
        public timeTag<thTag<T>> time { get{ return new (this); } }
        public titleTag<thTag<T>> title { get{ return new (this); } }
        public thTag() : base("th") { }
        public thTag(T parent) : base("th", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public thTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public thTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public thTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<thTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<thTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<thTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<thTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<thTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<thTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<thTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<thTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<thTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<thTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<thTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<thTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<thTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<thTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<thTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<thTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<thTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<thTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<thTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<thTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<thTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<thTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<thTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<thTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<thTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<thTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<thTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<thTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class theadTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T thead_ { get{ return _parent; } }
        public trTag<theadTag<T>> tr { get{ return new (this); } }
        public theadTag() : base("thead") { }
        public theadTag(T parent) : base("thead", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public theadTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public theadTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public theadTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public trTag<theadTag<T>> Tr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            trTag<theadTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class timeTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T time_ { get{ return _parent; } }
        public aTag<timeTag<T>> a { get{ return new (this); } }
        public abbrTag<timeTag<T>> abbr { get{ return new (this); } }
        public addressTag<timeTag<T>> address { get{ return new (this); } }
        public articleTag<timeTag<T>> article { get{ return new (this); } }
        public asideTag<timeTag<T>> aside { get{ return new (this); } }
        public audioTag<timeTag<T>> audio { get{ return new (this); } }
        public bTag<timeTag<T>> b { get{ return new (this); } }
        public bdiTag<timeTag<T>> bdi { get{ return new (this); } }
        public bdoTag<timeTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<timeTag<T>> blockquote { get{ return new (this); } }
        public brTag<timeTag<T>> br { get{ return new (this); } }
        public buttonTag<timeTag<T>> button { get{ return new (this); } }
        public canvasTag<timeTag<T>> canvas { get{ return new (this); } }
        public citeTag<timeTag<T>> cite { get{ return new (this); } }
        public codeTag<timeTag<T>> code { get{ return new (this); } }
        public dataTag<timeTag<T>> data { get{ return new (this); } }
        public delTag<timeTag<T>> del { get{ return new (this); } }
        public detailsTag<timeTag<T>> details { get{ return new (this); } }
        public dfnTag<timeTag<T>> dfn { get{ return new (this); } }
        public dialogTag<timeTag<T>> dialog { get{ return new (this); } }
        public divTag<timeTag<T>> div { get{ return new (this); } }
        public htmlTag<timeTag<T>> html { get{ return new (this); } }
        public tableTag<timeTag<T>> table { get{ return new (this); } }
        public templateTag<timeTag<T>> template { get{ return new (this); } }
        public textareaTag<timeTag<T>> textarea { get{ return new (this); } }
        public timeTag<timeTag<T>> time { get{ return new (this); } }
        public titleTag<timeTag<T>> title { get{ return new (this); } }
        public timeTag() : base("time") { }
        public timeTag(T parent) : base("time", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public timeTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public timeTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public timeTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<timeTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<timeTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<timeTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<timeTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<timeTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<timeTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<timeTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<timeTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<timeTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<timeTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<timeTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<timeTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<timeTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<timeTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<timeTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<timeTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<timeTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<timeTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<timeTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<timeTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<timeTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<timeTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<timeTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<timeTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<timeTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<timeTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<timeTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<timeTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class titleTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T title_ { get{ return _parent; } }
        public aTag<titleTag<T>> a { get{ return new (this); } }
        public abbrTag<titleTag<T>> abbr { get{ return new (this); } }
        public addressTag<titleTag<T>> address { get{ return new (this); } }
        public articleTag<titleTag<T>> article { get{ return new (this); } }
        public asideTag<titleTag<T>> aside { get{ return new (this); } }
        public audioTag<titleTag<T>> audio { get{ return new (this); } }
        public bTag<titleTag<T>> b { get{ return new (this); } }
        public bdiTag<titleTag<T>> bdi { get{ return new (this); } }
        public bdoTag<titleTag<T>> bdo { get{ return new (this); } }
        public blockquoteTag<titleTag<T>> blockquote { get{ return new (this); } }
        public brTag<titleTag<T>> br { get{ return new (this); } }
        public buttonTag<titleTag<T>> button { get{ return new (this); } }
        public canvasTag<titleTag<T>> canvas { get{ return new (this); } }
        public citeTag<titleTag<T>> cite { get{ return new (this); } }
        public codeTag<titleTag<T>> code { get{ return new (this); } }
        public dataTag<titleTag<T>> data { get{ return new (this); } }
        public delTag<titleTag<T>> del { get{ return new (this); } }
        public detailsTag<titleTag<T>> details { get{ return new (this); } }
        public dfnTag<titleTag<T>> dfn { get{ return new (this); } }
        public dialogTag<titleTag<T>> dialog { get{ return new (this); } }
        public divTag<titleTag<T>> div { get{ return new (this); } }
        public htmlTag<titleTag<T>> html { get{ return new (this); } }
        public tableTag<titleTag<T>> table { get{ return new (this); } }
        public templateTag<titleTag<T>> template { get{ return new (this); } }
        public textareaTag<titleTag<T>> textarea { get{ return new (this); } }
        public timeTag<titleTag<T>> time { get{ return new (this); } }
        public titleTag<titleTag<T>> title { get{ return new (this); } }
        public titleTag() : base("title") { }
        public titleTag(T parent) : base("title", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public titleTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public titleTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public titleTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public aTag<titleTag<T>> A(string? innerText = null, string? _download = null, string? _href = null, string? _hreflang = null, string? _media = null, string? _ping = null, string? _referrerpolicy = null, string? _rel = null, string? _target = null, string? _type = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            aTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_download != null) result.AddAttribute("download", _download);
            if (_href != null) result.AddAttribute("href", _href);
            if (_hreflang != null) result.AddAttribute("hreflang", _hreflang);
            if (_media != null) result.AddAttribute("media", _media);
            if (_ping != null) result.AddAttribute("ping", _ping);
            if (_referrerpolicy != null) result.AddAttribute("referrerpolicy", _referrerpolicy);
            if (_rel != null) result.AddAttribute("rel", _rel);
            if (_target != null) result.AddAttribute("target", _target);
            if (_type != null) result.AddAttribute("type", _type);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public abbrTag<titleTag<T>> Abbr(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            abbrTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public addressTag<titleTag<T>> Address(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            addressTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public articleTag<titleTag<T>> Article(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            articleTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public asideTag<titleTag<T>> Aside(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            asideTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public audioTag<titleTag<T>> Audio(string? innerText = null, string? _autoplay = null, string? _controls = null, string? _loop = null, string? _muted = null, string? _preload = null, string? _src = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            audioTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autoplay != null) result.AddAttribute("autoplay", _autoplay);
            if (_controls != null) result.AddAttribute("controls", _controls);
            if (_loop != null) result.AddAttribute("loop", _loop);
            if (_muted != null) result.AddAttribute("muted", _muted);
            if (_preload != null) result.AddAttribute("preload", _preload);
            if (_src != null) result.AddAttribute("src", _src);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bTag<titleTag<T>> B(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdiTag<titleTag<T>> Bdi(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdiTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public bdoTag<titleTag<T>> Bdo(string? innerText = null, string? _dir = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            bdoTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public blockquoteTag<titleTag<T>> Blockquote(string? innerText = null, string? _cite = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            blockquoteTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public brTag<titleTag<T>> Br(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            brTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public buttonTag<titleTag<T>> Button(string? innerText = null, string? _autofocus = null, string? _disabled = null, string? _form = null, string? _formaction = null, string? _formenctype = null, string? _formmethod = null, string? _formnovalidate = null, string? _formtarget = null, string? _popovertarget = null, string? _popovertargetaction = null, string? _name = null, string? _type = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            buttonTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_autofocus != null) result.AddAttribute("autofocus", _autofocus);
            if (_disabled != null) result.AddAttribute("disabled", _disabled);
            if (_form != null) result.AddAttribute("form", _form);
            if (_formaction != null) result.AddAttribute("formaction", _formaction);
            if (_formenctype != null) result.AddAttribute("formenctype", _formenctype);
            if (_formmethod != null) result.AddAttribute("formmethod", _formmethod);
            if (_formnovalidate != null) result.AddAttribute("formnovalidate", _formnovalidate);
            if (_formtarget != null) result.AddAttribute("formtarget", _formtarget);
            if (_popovertarget != null) result.AddAttribute("popovertarget", _popovertarget);
            if (_popovertargetaction != null) result.AddAttribute("popovertargetaction", _popovertargetaction);
            if (_name != null) result.AddAttribute("name", _name);
            if (_type != null) result.AddAttribute("type", _type);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public canvasTag<titleTag<T>> Canvas(string? innerText = null, string? _height = null, string? _width = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            canvasTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_height != null) result.AddAttribute("height", _height);
            if (_width != null) result.AddAttribute("width", _width);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public citeTag<titleTag<T>> Cite(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            citeTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public codeTag<titleTag<T>> Code(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            codeTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dataTag<titleTag<T>> Data(string? innerText = null, string? _value = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dataTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_value != null) result.AddAttribute("value", _value);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public delTag<titleTag<T>> Del(string? innerText = null, string? _cite = null, string? _datetime = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            delTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_cite != null) result.AddAttribute("cite", _cite);
            if (_datetime != null) result.AddAttribute("datetime", _datetime);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public detailsTag<titleTag<T>> Details(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            detailsTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dfnTag<titleTag<T>> Dfn(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dfnTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public dialogTag<titleTag<T>> Dialog(string? innerText = null, string? _open = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            dialogTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_open != null) result.AddAttribute("open", _open);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public divTag<titleTag<T>> Div(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            divTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public htmlTag<titleTag<T>> Html(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            htmlTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public tableTag<titleTag<T>> Table(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tableTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public templateTag<titleTag<T>> Template(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            templateTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public textareaTag<titleTag<T>> Textarea(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            textareaTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public timeTag<titleTag<T>> Time(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            timeTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public titleTag<titleTag<T>> Title(string? innerText = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            titleTag<titleTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }

    /// <summary>
    /// <para>Generated from HtmlSpecification</para>
    /// </summary>
    public partial class trTag<T> : Tag where T : Tag
    {
        private T _parent;
        public T tr_ { get{ return _parent; } }
        public tdTag<trTag<T>> td { get{ return new (this); } }
        public thTag<trTag<T>> th { get{ return new (this); } }
        public trTag() : base("tr") { }
        public trTag(T parent) : base("tr", parent)
        {
            _parent = parent;
            _parent.AddInnerElement(this);
        }
        public trTag<T> Attribute(string name, string value)
        {
            AddAttribute(name, value);
            return this;
        }
        public trTag<T> Attributes(Dictionary<string, string> attributes)
        {
            foreach (var attribute in attributes)
            {
                AddAttribute(attribute.Key, attribute.Value);
            }
            return this;
        }
        public trTag<T> InnerText(string innerText)
        {
            AddInnerText(innerText);
            return this;
        }
        public T InnerTag(HtmlBuilder tag)
        {
            AddInnerElement(tag);
            return _parent;
        }
        public T InnerTags(IEnumerable<HtmlBuilder> tags)
        {
            foreach (var tag in tags)
            {
                AddInnerElement(tag);
            }
            return _parent;
        }
        public tdTag<trTag<T>> Td(string? innerText = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            tdTag<trTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_colspan != null) result.AddAttribute("colspan", _colspan);
            if (_headers != null) result.AddAttribute("headers", _headers);
            if (_rowspan != null) result.AddAttribute("rowspan", _rowspan);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
        public thTag<trTag<T>> Th(string? innerText = null, string? _abbr = null, string? _colspan = null, string? _headers = null, string? _rowspan = null, string? _scope = null, string? _accesskey = null, string? _class = null, string? _contenteditable = null, string? _dir = null, string? _draggable = null, string? _enterkeyhint = null, string? _hidden = null, string? _id = null, string? _inert = null, string? _inputmode = null, string? _lang = null, string? _popover = null, string? _spellcheck = null, string? _style = null, string? _tabindex = null, string? _title = null, string? _translate = null, string? _onafterprint = null)
        {
            thTag<trTag<T>> result = new(this);
            if (innerText != null) result.AddInnerText(innerText);
            if (_abbr != null) result.AddAttribute("abbr", _abbr);
            if (_colspan != null) result.AddAttribute("colspan", _colspan);
            if (_headers != null) result.AddAttribute("headers", _headers);
            if (_rowspan != null) result.AddAttribute("rowspan", _rowspan);
            if (_scope != null) result.AddAttribute("scope", _scope);
            if (_accesskey != null) result.AddAttribute("accesskey", _accesskey);
            if (_class != null) result.AddAttribute("class", _class);
            if (_contenteditable != null) result.AddAttribute("contenteditable", _contenteditable);
            if (_dir != null) result.AddAttribute("dir", _dir);
            if (_draggable != null) result.AddAttribute("draggable", _draggable);
            if (_enterkeyhint != null) result.AddAttribute("enterkeyhint", _enterkeyhint);
            if (_hidden != null) result.AddAttribute("hidden", _hidden);
            if (_id != null) result.AddAttribute("id", _id);
            if (_inert != null) result.AddAttribute("inert", _inert);
            if (_inputmode != null) result.AddAttribute("inputmode", _inputmode);
            if (_lang != null) result.AddAttribute("lang", _lang);
            if (_popover != null) result.AddAttribute("popover", _popover);
            if (_spellcheck != null) result.AddAttribute("spellcheck", _spellcheck);
            if (_style != null) result.AddAttribute("style", _style);
            if (_tabindex != null) result.AddAttribute("tabindex", _tabindex);
            if (_title != null) result.AddAttribute("title", _title);
            if (_translate != null) result.AddAttribute("translate", _translate);
            if (_onafterprint != null) result.AddAttribute("onafterprint", _onafterprint);
            return result;
        }
    }
}